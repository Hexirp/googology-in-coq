(** Playground モジュールは、まだ単独のモジュールに分割していないコードを置く場所です。 *)

(** * 他のファイルの読み込み *)

(** << Googology_In_Coq.Base >> を読み込みます。 *)

Require Googology_In_Coq.Base.

(** * 他のモジュールの取り込み *)

(** << Googology_In_Coq.Base >> を取り込みます。 *)

Import Googology_In_Coq.Base.

(** * 関数に関する定義 *)

(** 関数に関するモジュールを定義します。 *)

Module A_2024_08_26_0002 .

(** 恒等関数を定義します。 *)

Definition A_2024_07_21_0000@{ i | } : forall A : Type@{ i } , A -> A := fun A : Type@{ i } => fun x : A => x .

Definition 恒等関数@{ i | } ( A : Type@{ i } ) ( x : A ) : A := A_2024_07_21_0000 A x .

(** 関数合成を定義します。 *)

Definition A_2024_07_21_0001@{ i | }
    : forall A : Type@{ i } , forall B : Type@{ i } , forall C : Type@{ i } , ( B -> A ) -> ( C -> B ) -> C -> A
    := fun A : Type@{ i } => fun B : Type@{ i } => fun C : Type@{ i } => fun f : B -> A => fun g : C -> B => fun x : C => f ( g x )
.

Definition 合成する@{ i | } ( A : Type@{ i } ) ( B : Type@{ i } ) ( C : Type@{ i } ) ( f : B -> A ) ( g : C -> B ) ( x : C ) : A
    := A_2024_07_21_0001 A B C f g x
.

(** 二個の引数を取る依存関数を取り、その二個の引数を入れ替えます。 *)

Definition A_2024_08_02_0002@{ i | }
    :
        forall A : Type@{ i } ,
        forall B : Type@{ i } ,
        forall C : A -> B -> Type@{ i } ,
        ( forall x : A , forall y : B , C x y )
        ->
        forall y : B , forall x : A , C x y
    :=
        fun A : Type@{ i } =>
        fun B : Type@{ i } =>
        fun C : A -> B -> Type@{ i } =>
        fun f : forall x : A , forall y : B , C x y =>
        fun y : B => fun x : A => f x y
.

(** ある値を取り、その値を常に返す定数関数を作ります。 *)

Definition A_2024_07_21_0002@{ i | }
    : forall A : Type@{ i } , forall B : Type@{ i } , A -> B -> A
    := fun A : Type@{ i } => fun B : Type@{ i } => fun x : A => fun y : B => x
.

Definition 定数関数を作る@{ i | } ( A : Type@{ i } ) ( B : Type@{ i } ) ( x : A ) ( y : B ) : A := A_2024_07_21_0002 A B x y .

End A_2024_08_26_0002 .

(** 空型に関する定義 *)

(** 空型に関するモジュールを定義します。 *)

Module A_2024_08_26_0003 .

(** 空型を定義します。「空型」は "empty type" の訳語です。 *)

Inductive A_2024_07_21_0003@{ i } : Type@{ i } := .

Definition 空型@{ i | } : Type@{ i } := A_2024_07_21_0003@{ i } .

(** 空型に付随する定義に関するモジュールを定義します。 *)

Module A_2024_07_21_0003 .

(** 空型について場合分けします。 *)

Definition A_2024_07_21_0004@{ i | }
    : forall 目標 : Type@{ i } , 空型@{ i } -> 目標
    := fun 目標 : Type@{ i } => fun 対象 : 空型@{ i } => match 対象 with end
.

Definition 場合分け@{ i | } ( 目標 : Type@{ i } ) ( 対象 : 空型@{ i } ) : 目標 := A_2024_07_21_0004 目標 対象 .

(** 空型について依存型の場合分けをします。 *)

Definition A_2024_08_26_0004@{ i | }
    : forall 目標 : 空型@{ i } -> Type@{ i } , forall 対象 : 空型@{ i } , 目標 対象
    := fun 目標 : 空型@{ i } -> Type@{ i } => fun 対象 : 空型@{ i } => match 対象 as 対象_ return 目標 対象_ with end
.

Definition 依存型の場合分け@{ i | } ( 目標 : 空型@{ i } -> Type@{ i } ) ( 対象 : 空型@{ i } ) : 目標 対象 := A_2024_08_26_0004 目標 対象 .

End A_2024_07_21_0003 .

Module 空型 := A_2024_07_21_0003 .

End A_2024_08_26_0003 .

(** * 残り *)

Import A_2024_08_26_0002 .

Import A_2024_08_26_0003 .

(** 否定を表す型を定義します。 *)

Inductive A_2024_08_01_0001@{ i } ( A : Type@{ i } ) : Type@{ i }
    := A_2024_08_01_0002 : ( A -> 空型@{ i } ) -> A_2024_08_01_0001 A
.

(** [A] の否定の値と [A] の値から空型の値を得ることができます。 *)

Definition A_2024_08_01_0003@{ i } ( A : Type@{ i } ) ( x : A_2024_08_01_0001@{ i } A ) ( y : A ) : 空型@{ i }
    := match x with A_2024_08_01_0002 _ x_中身 => x_中身 y end
.

(** 対偶を取る関数です。 *)

Definition A_2024_07_21_0008@{ i } ( A : Type@{ i } ) ( B : Type@{ i } ) ( f : A -> B ) ( g : B -> 空型@{ i } ) ( x : A )
    : 空型@{ i }
    := g ( f x )
.

(** 対偶を取る関数です。 *)

Definition A_2024_08_01_0004@{ i } ( A : Type@{ i } ) ( B : Type@{ i } ) ( f : A -> B ) ( x : A_2024_08_01_0001@{ i } B )
    : A_2024_08_01_0001@{ i } A
    := A_2024_08_01_0002@{ i } A ( fun y : A => A_2024_08_01_0003@{ i } B x ( f y ) )
.

(** 直和型を定義します。 *)

Inductive A_2024_07_21_0005@{ i } ( A : Type@{ i } ) ( B : Type@{ i } )
    := A_2024_07_21_0006 : A -> A_2024_07_21_0005 A B | A_2024_07_21_0007 : B -> A_2024_07_21_0005 A B
.

(** 直和型の値において、それが右の型の値である時に空型の値を生み出す場合、必ず左の型の値を取り出すことが出来ます。 *)

Definition A_2024_07_21_0009@{ i }
        ( A : Type@{ i } )
        ( B : Type@{ i } )
        ( 証拠 : B -> 空型@{ i } )
        ( x : A_2024_07_21_0005 A B )
    : A
    := match x with A_2024_07_21_0006 _ _ x_左 => x_左 | A_2024_07_21_0007 _ _ x_右 => 空型.場合分け@{ i } A ( 証拠 x_右 ) end
.

(** 直和型の値において、それが左の型の値である時に空型の値を生み出す場合、必ず右の型の値を取り出すことが出来ます。 *)

Definition A_2024_07_21_0010@{ i }
        ( A : Type@{ i } )
        ( B : Type@{ i } )
        ( 証拠 : B -> 空型@{ i } )
        ( x : A_2024_07_21_0005 B A )
    : A
    := match x with A_2024_07_21_0006 _ _ x_左 => 空型.場合分け@{ i } A ( 証拠 x_左 ) | A_2024_07_21_0007 _ _ x_右 => x_右 end
.

(** 直和型の値において、その右の型の否定の値がある場合、必ず左の型の値を取り出すことが出来ます。 *)

Definition A_2024_08_02_0000@{ i }
        ( A : Type@{ i } )
        ( B : Type@{ i } )
        ( 証拠 : A_2024_08_01_0001@{ i } B )
        ( x : A_2024_07_21_0005 A B )
    : A
    :=
        match
            x
        with
            A_2024_07_21_0006 _ _ x_左 => x_左
            |
            A_2024_07_21_0007 _ _ x_右 => 空型.場合分け@{ i } A ( A_2024_08_01_0003@{ i } B 証拠 x_右 )
        end
.

(** 直和型の値において、その左の型の否定の値がある場合、必ず右の型の値を取り出すことが出来ます。 *)

Definition A_2024_08_02_0001@{ i }
        ( A : Type@{ i } )
        ( B : Type@{ i } )
        ( 証拠 : A_2024_08_01_0001@{ i } B )
        ( x : A_2024_07_21_0005 B A )
    : A
    :=
        match
            x
        with
            A_2024_07_21_0006 _ _ x_左 => 空型.場合分け@{ i } A ( A_2024_08_01_0003@{ i } B 証拠 x_左 )
            |
            A_2024_07_21_0007 _ _ x_右 => x_右
        end
.

(** 単型を定義します。「単型」は "unit type" の訳語です。 *)

Inductive A_2024_07_21_0011@{ i } : Type@{ i } := A_2024_07_21_0012 : A_2024_07_21_0011 .

(** 直積型を定義します。 *)

Inductive A_2024_07_21_0013@{ i } ( A : Type@{ i } ) ( B : Type@{ i } ) : Type@{ i }
    := A_2024_07_21_0014 : A -> B -> A_2024_07_21_0013 A B
.

(** 一番目の区域の値を取り出します。「区域」は "field" の訳語です。 *)

Definition A_2024_07_21_0015@{ i | } ( A : Type@{ i } ) ( B : Type@{ i } ) ( x : A_2024_07_21_0013@{ i } A B ) : A
    := match x with A_2024_07_21_0014 _ _ x_1 x_2 => x_1 end
.

(** 二番目の区域の値を取り出します。「区域」は "field" の訳語です。 *)

Definition A_2024_07_21_0016@{ i | } ( A : Type@{ i } ) ( B : Type@{ i } ) ( x : A_2024_07_21_0013@{ i } B A ) : A
    := match x with A_2024_07_21_0014 _ _ x_1 x_2 => x_2 end
.

(** 直積型を取る関数を、それぞれの領域を取る関数に変えます。 *)

Definition A_2024_07_21_0017@{ i | }
        ( A : Type@{ i } )
        ( B : Type@{ i } )
        ( C : Type@{ i } )
        ( f : A_2024_07_21_0013@{ i } B C -> A )
        ( x_1 : B )
        ( x_2 : C )
    : A
    := f ( A_2024_07_21_0014@{ i } B C x_1 x_2 )
.

(** それぞれの領域を取る関数を、直積型を取る関数に変えます。 *)

Definition A_2024_07_21_0018@{ i | }
        ( A : Type@{ i } )
        ( B : Type@{ i } )
        ( C : Type@{ i } )
        ( f : B -> C -> A )
        ( x : A_2024_07_21_0013@{ i } B C )
    : A
    := f ( A_2024_07_21_0015@{ i } B C x ) ( A_2024_07_21_0016@{ i } C B x )
.

(** 依存直和型を定義します。 *)

Inductive A_2024_07_21_0019@{ i | } ( A : Type@{ i } ) ( B : A -> Type@{ i } ) : Type@{ i }
    := A_2024_07_21_0020 : forall x : A , B x -> A_2024_07_21_0019 A B
.

(** 一番目の領域の値を取り出します *)

Definition A_2024_07_21_0021@{ i | } ( A : Type@{ i } ) ( B : A -> Type@{ i } ) ( x : A_2024_07_21_0019@{ i } A B ) : A
    := match x with A_2024_07_21_0020 _ _ x_1 x_2 => x_1 end
.

(** 二番目の領域の値を取り出します *)

Definition A_2024_07_21_0022@{ i | } ( A : Type@{ i } ) ( B : A -> Type@{ i } ) ( x : A_2024_07_21_0019@{ i } A B )
    : B ( A_2024_07_21_0021@{ i } A B x )
    := match x as x_ return B ( A_2024_07_21_0021@{ i } A B x_ ) with A_2024_07_21_0020 _ _ x_1 x_2 => x_2 end
.

(** 依存直和型を取る関数を、それぞれの領域を取る関数に変えます。 *)

Definition A_2024_07_21_0023@{ i | }
        ( A : Type@{ i } )
        ( B : Type@{ i } )
        ( C : B -> Type@{ i } )
        ( f : A_2024_07_21_0019@{ i } B C -> A )
        ( x_1 : B )
        ( x_2 : C x_1 )
    : A
    := f ( A_2024_07_21_0020@{ i } B C x_1 x_2 )
.

(** それぞれの領域を取る関数を、依存直和型を取る関数に変えます。 *)

Definition A_2024_07_21_0024@{ i | }
        ( A : Type@{ i } )
        ( B : Type@{ i } )
        ( C : B -> Type@{ i } )
        ( f : forall x_1 : B , C x_1 -> A )
        ( x : A_2024_07_21_0019@{ i } B C )
    : A
    := match x with A_2024_07_21_0020 _ _ x_1 x_2 => f x_1 x_2 end
.

(** ブール型を定義します。「ブール型」は "boolean type" の訳語です。 *)

Inductive A_2024_07_21_0025@{ i | } : Type@{ i } := A_2024_07_21_0026 : A_2024_07_21_0025 | A_2024_07_21_0027 : A_2024_07_21_0025 .

(** 論理否定です。 *)

Definition A_2024_07_21_0028@{ i | } ( x : A_2024_07_21_0025@{ i } ) : A_2024_07_21_0025@{ i }
    := match x with A_2024_07_21_0026 => A_2024_07_21_0027@{ i } | A_2024_07_21_0027 => A_2024_07_21_0026@{ i } end
.

(** 論理和です。 *)

Definition A_2024_07_21_0029@{ i | } ( x : A_2024_07_21_0025@{ i } ) ( y : A_2024_07_21_0025@{ i } ) : A_2024_07_21_0025@{ i }
    :=
        match
            x , y
        with
            A_2024_07_21_0026 , A_2024_07_21_0026 => A_2024_07_21_0026@{ i }
            |
            A_2024_07_21_0026 , A_2024_07_21_0027 => A_2024_07_21_0027@{ i }
            |
            A_2024_07_21_0027 , A_2024_07_21_0026 => A_2024_07_21_0027@{ i }
            |
            A_2024_07_21_0027 , A_2024_07_21_0027 => A_2024_07_21_0027@{ i }
        end
.

(** 論理積です。 *)

Definition A_2024_07_21_0030@{ i | } ( x : A_2024_07_21_0025@{ i } ) ( y : A_2024_07_21_0025@{ i } ) : A_2024_07_21_0025@{ i }
    :=
    match
        x , y
    with
        A_2024_07_21_0026 , A_2024_07_21_0026 => A_2024_07_21_0026@{ i }
        |
        A_2024_07_21_0026 , A_2024_07_21_0027 => A_2024_07_21_0026@{ i }
        |
        A_2024_07_21_0027 , A_2024_07_21_0026 => A_2024_07_21_0026@{ i }
        |
        A_2024_07_21_0027 , A_2024_07_21_0027 => A_2024_07_21_0027@{ i }
    end
.

(** 0 始まりの自然数を定義します。 *)

Inductive A_2024_07_21_0031@{ i | } : Type@{i}
    := A_2024_07_21_0032 : A_2024_07_21_0031 | A_2024_07_21_0033 : A_2024_07_21_0031 -> A_2024_07_21_0031
.

(** 一です。 *)

Definition A_2024_07_21_0034@{ i | } : A_2024_07_21_0031@{ i } := A_2024_07_21_0033@{ i } A_2024_07_21_0032@{ i } .

(** 二です。 *)

Definition A_2024_07_21_0035@{ i | } : A_2024_07_21_0031@{ i } := A_2024_07_21_0033@{ i } A_2024_07_21_0034@{ i } .

(** 三です。 *)

Definition A_2024_07_21_0036@{ i | } : A_2024_07_21_0031@{ i } := A_2024_07_21_0033@{ i } A_2024_07_21_0035@{ i } .

(** 四です。 *)

Definition A_2024_07_21_0037@{ i | } : A_2024_07_21_0031@{ i } := A_2024_07_21_0033@{ i } A_2024_07_21_0036@{ i } .

(** 五です。 *)

Definition A_2024_07_21_0038@{ i | } : A_2024_07_21_0031@{ i } := A_2024_07_21_0033@{ i } A_2024_07_21_0037@{ i } .

(** 六です。 *)

Definition A_2024_07_21_0039@{ i | } : A_2024_07_21_0031@{ i } := A_2024_07_21_0033@{ i } A_2024_07_21_0038@{ i } .

(** 七です。 *)

Definition A_2024_07_21_0040@{ i | } : A_2024_07_21_0031@{ i } := A_2024_07_21_0033@{ i } A_2024_07_21_0039@{ i } .

(** 八です。 *)

Definition A_2024_07_21_0041@{ i | } : A_2024_07_21_0031@{ i } := A_2024_07_21_0033@{ i } A_2024_07_21_0040@{ i } .

(** 九です。 *)

Definition A_2024_07_21_0042@{ i | } : A_2024_07_21_0031@{ i } := A_2024_07_21_0033@{ i } A_2024_07_21_0041@{ i } .

(** 十です。 *)

Definition A_2024_07_21_0043@{ i | } : A_2024_07_21_0031@{ i } := A_2024_07_21_0033@{ i } A_2024_07_21_0042@{ i } .

(** 二を足します。 *)

Definition A_2024_07_21_0044@{ i | } ( x : A_2024_07_21_0031@{ i } ) : A_2024_07_21_0031@{ i }
    := A_2024_07_21_0033@{ i } ( A_2024_07_21_0033@{ i } x )
.

(** 三を足します。 *)

Definition A_2024_07_21_0045@{ i | } ( x : A_2024_07_21_0031@{ i } ) : A_2024_07_21_0031@{ i }
    := A_2024_07_21_0033@{ i } ( A_2024_07_21_0044@{ i } x )
.

(** 四を足します。 *)

Definition A_2024_07_21_0046@{ i | } ( x : A_2024_07_21_0031@{ i } ) : A_2024_07_21_0031@{ i }
    := A_2024_07_21_0033@{ i } ( A_2024_07_21_0045@{ i } x )
.

(** 五を足します。 *)

Definition A_2024_07_21_0047@{ i | } ( x : A_2024_07_21_0031@{ i } ) : A_2024_07_21_0031@{ i }
    := A_2024_07_21_0033@{ i } ( A_2024_07_21_0046@{ i } x )
.

(** 六を足します。 *)

Definition A_2024_07_21_0048@{ i | } ( x : A_2024_07_21_0031@{ i } ) : A_2024_07_21_0031@{ i }
    := A_2024_07_21_0033@{ i } ( A_2024_07_21_0047@{ i } x )
.

(** 七を足します。 *)

Definition A_2024_07_21_0049@{ i | } ( x : A_2024_07_21_0031@{ i } ) : A_2024_07_21_0031@{ i }
    := A_2024_07_21_0033@{ i } ( A_2024_07_21_0048@{ i } x )
.

(** 八を足します。 *)

Definition A_2024_07_21_0050@{ i | } ( x : A_2024_07_21_0031@{ i } ) : A_2024_07_21_0031@{ i }
    := A_2024_07_21_0033@{ i } ( A_2024_07_21_0049@{ i } x )
.

(** 九を足します。 *)

Definition A_2024_07_21_0051@{ i | } ( x : A_2024_07_21_0031@{ i } ) : A_2024_07_21_0031@{ i }
    := A_2024_07_21_0033@{ i } ( A_2024_07_21_0050@{ i } x )
.

(** 十を足します。 *)

Definition A_2024_07_21_0052@{ i | } ( x : A_2024_07_21_0031@{ i } ) : A_2024_07_21_0031@{ i }
    := A_2024_07_21_0033@{ i } ( A_2024_07_21_0051@{ i } x )
.

(** 足します。 *)

Definition A_2024_07_21_0053@{ i | } ( x : A_2024_07_21_0031@{ i } ) ( y : A_2024_07_21_0031@{ i } ) : A_2024_07_21_0031@{ i }
    :=
        let
            fix a ( x : A_2024_07_21_0031@{ i } ) ( y : A_2024_07_21_0031@{ i } ) { struct x } : A_2024_07_21_0031@{ i }
                :=
                    match
                        x , y
                    with
                        A_2024_07_21_0032 , A_2024_07_21_0032 => A_2024_07_21_0032@{ i }
                        |
                        A_2024_07_21_0032 , A_2024_07_21_0033 y_前 => A_2024_07_21_0033@{ i } y_前
                        |
                        A_2024_07_21_0033 x_前 , A_2024_07_21_0032 => A_2024_07_21_0033@{ i } x_前
                        |
                        A_2024_07_21_0033 x_前 , A_2024_07_21_0033 y_前
                            => A_2024_07_21_0033@{ i } ( A_2024_07_21_0033@{ i } ( a x_前 y_前 ) )
                    end
        in
            a x y
.

(** 掛けます。 *)

Definition A_2024_07_21_0054@{ i | } ( x : A_2024_07_21_0031@{ i } ) ( y : A_2024_07_21_0031@{ i } ) : A_2024_07_21_0031@{ i }
    :=
        let
            fix a ( x : A_2024_07_21_0031@{ i } ) ( y : A_2024_07_21_0031@{ i } ) { struct y } : A_2024_07_21_0031@{ i }
                :=
                    match
                        y
                    with
                        A_2024_07_21_0032 => A_2024_07_21_0032@{ i }
                        |
                        A_2024_07_21_0033 y_前=> A_2024_07_21_0053@{ i } x ( a x y_前 )
                    end
        in
            a x y
.

(** 冪乗です。 *)

Definition A_2024_07_21_0055@{ i | } ( x : A_2024_07_21_0031@{ i } ) ( y : A_2024_07_21_0031@{ i } ) : A_2024_07_21_0031@{ i }
    :=
        let
            fix a ( x : A_2024_07_21_0031@{ i } ) ( y : A_2024_07_21_0031@{ i } ) { struct y } : A_2024_07_21_0031@{ i }
                :=
                    match
                        y
                    with
                        A_2024_07_21_0032 => A_2024_07_21_0034@{ i }
                        |
                        A_2024_07_21_0033 y_前 => A_2024_07_21_0054@{ i } x ( a x y_前 )
                    end
        in
            a x y
.

(** テトレーションです。 *)

Definition A_2024_07_21_0060@{ i | } ( x : A_2024_07_21_0031@{ i } ) ( y : A_2024_07_21_0031@{ i } ) : A_2024_07_21_0031@{ i }
    :=
        let
            fix a ( x : A_2024_07_21_0031@{ i } ) ( y : A_2024_07_21_0031@{ i } ) { struct y } : A_2024_07_21_0031@{ i }
                :=
                    match
                        y
                    with
                        A_2024_07_21_0032 => A_2024_07_21_0034@{ i }
                        |
                        A_2024_07_21_0033 y_前 => A_2024_07_21_0055@{ i } x ( a x y_前 )
                    end
        in
            a x y
.

(** 最小値です。 *)

Definition A_2024_07_21_0056@{ i | } ( x : A_2024_07_21_0031@{ i } ) ( y : A_2024_07_21_0031@{ i } ) : A_2024_07_21_0031@{ i }
    :=
        let
            fix a ( x : A_2024_07_21_0031@{ i } ) ( y : A_2024_07_21_0031@{ i } ) { struct x } : A_2024_07_21_0031@{ i }
                :=
                    match
                        x , y
                    with
                        A_2024_07_21_0032 , A_2024_07_21_0032 => A_2024_07_21_0032@{ i }
                        |
                        A_2024_07_21_0032 , A_2024_07_21_0033 y_前 => A_2024_07_21_0032@{ i }
                        |
                        A_2024_07_21_0033 x_前 , A_2024_07_21_0032 => A_2024_07_21_0032@{ i }
                        |
                        A_2024_07_21_0033 x_前 , A_2024_07_21_0033 y_前 => A_2024_07_21_0033@{ i } ( a x_前 y_前 )
                    end
        in
            a x y
.

(** 最大値です。 *)

Definition A_2024_07_21_0057@{ i | } ( x : A_2024_07_21_0031@{ i } ) ( y : A_2024_07_21_0031@{ i } ) : A_2024_07_21_0031@{ i }
    :=
        let
            fix a ( x : A_2024_07_21_0031@{ i } ) ( y : A_2024_07_21_0031@{ i } ) { struct x } : A_2024_07_21_0031@{ i }
                :=
                    match
                        x , y
                    with
                        A_2024_07_21_0032 , A_2024_07_21_0032 => A_2024_07_21_0032@{ i }
                        |
                        A_2024_07_21_0032 , A_2024_07_21_0033 y_前 => A_2024_07_21_0033@{ i } y_前
                        |
                        A_2024_07_21_0033 x_前 , A_2024_07_21_0032 => A_2024_07_21_0033@{ i } x_前
                        |
                        A_2024_07_21_0033 x_前 , A_2024_07_21_0033 y_前 => A_2024_07_21_0033@{ i } ( a x_前 y_前 )
                    end
        in
            a x y
.

(** 三角数です。 *)

Definition A_2024_07_21_0058@{ i | } ( x : A_2024_07_21_0031@{ i } ) : A_2024_07_21_0031@{ i }
    :=
        let
            fix a ( x : A_2024_07_21_0031@{ i } ) { struct x } : A_2024_07_21_0031@{ i }
                :=
                    match
                        x
                    with
                        A_2024_07_21_0032 => A_2024_07_21_0032@{ i }
                        |
                        A_2024_07_21_0033 x_前 => A_2024_07_21_0053@{ i } x ( a x_前 )
                    end
        in
            a x
.

(** 階乗です。 *)

Definition A_2024_07_21_0059@{ i | } ( x : A_2024_07_21_0031@{ i } ) : A_2024_07_21_0031@{ i }
    :=
        let
            fix a ( x : A_2024_07_21_0031@{ i } ) { struct x } : A_2024_07_21_0031@{ i }
                :=
                    match
                        x
                    with
                        A_2024_07_21_0032 => A_2024_07_21_0034@{ i }
                        |
                        A_2024_07_21_0033 x_前 => A_2024_07_21_0054@{ i } x ( a x_前 )
                    end
        in
            a x
.

(** 二項係数です。 *)

Definition A_2024_07_21_0061@{ i | } ( x : A_2024_07_21_0031@{ i } ) ( y : A_2024_07_21_0031@{ i } ) : A_2024_07_21_0031@{ i }
    :=
        let
            fix a ( x : A_2024_07_21_0031@{ i } ) ( y : A_2024_07_21_0031@{ i } ) { struct x } : A_2024_07_21_0031@{ i }
                :=
                    match
                        x , y
                    with
                        A_2024_07_21_0032 , A_2024_07_21_0032 => A_2024_07_21_0034@{ i }
                        |
                        A_2024_07_21_0032 , A_2024_07_21_0033 y_前 => A_2024_07_21_0032@{ i }
                        |
                        A_2024_07_21_0033 x_前 , A_2024_07_21_0032 => A_2024_07_21_0034@{ i }
                        |
                        A_2024_07_21_0033 x_前 , A_2024_07_21_0033 y_前 => A_2024_07_21_0053@{ i } ( a x_前 y ) ( a x_前 y_前 )
                    end
        in
            a x y
.

(** フィボナッチ数列です。 *)

Definition A_2024_07_21_0062@{ i | } ( x : A_2024_07_21_0031@{ i } ) : A_2024_07_21_0031@{ i }
    :=
        let
            fix a ( x : A_2024_07_21_0031@{ i } ) ( y : A_2024_07_21_0031@{ i } ) ( z : A_2024_07_21_0031@{ i } ) { struct x }
                : A_2024_07_21_0031@{ i }
                :=
                    match
                        x
                    with
                        A_2024_07_21_0032 => y
                        |
                        A_2024_07_21_0033 x_前 => a x_前 z ( A_2024_07_21_0053@{ i } y z )
                    end
        in
            a x A_2024_07_21_0032@{ i } A_2024_07_21_0034@{ i }
.

(** 2 で割ります。 *)

Definition A_2024_08_02_0003@{ i | } ( x : A_2024_07_21_0031@{ i } ) : A_2024_07_21_0031@{ i }
    :=
        let
            fix a ( x : A_2024_07_21_0031@{ i } ) ( y : A_2024_07_21_0031@{ i } ) ( z : A_2024_07_21_0031@{ i } ) { struct x }
                : A_2024_07_21_0031@{ i }
                :=
                    match
                        x
                    with
                        A_2024_07_21_0032 => y
                        |
                        A_2024_07_21_0033 x_前 => a x_前 z ( A_2024_07_21_0033@{ i } y )
                    end
        in
            a x A_2024_07_21_0032@{ i } A_2024_07_21_0032@{ i }
.

(** 1 始まりの自然数を定義します。 *)

Inductive A_2024_07_21_0063@{ i | } : Type@{i}
    :=
        A_2024_07_21_0064 : A_2024_07_21_0063
        |
        A_2024_07_21_0065 : A_2024_07_21_0063 -> A_2024_07_21_0063
.

(** 二です。 *)

Definition A_2024_07_21_0066@{ i | } : A_2024_07_21_0063@{ i } := A_2024_07_21_0065@{ i } A_2024_07_21_0064@{ i } .

(** 三です。 *)

Definition A_2024_07_21_0067@{ i | } : A_2024_07_21_0063@{ i } := A_2024_07_21_0065@{ i } A_2024_07_21_0066@{ i } .

(** 四です。 *)

Definition A_2024_07_21_0068@{ i | } : A_2024_07_21_0063@{ i } := A_2024_07_21_0065@{ i } A_2024_07_21_0067@{ i } .

(** 五です。 *)

Definition A_2024_07_21_0069@{ i | } : A_2024_07_21_0063@{ i } := A_2024_07_21_0065@{ i } A_2024_07_21_0068@{ i } .

(** 六です。 *)

Definition A_2024_07_21_0070@{ i | } : A_2024_07_21_0063@{ i } := A_2024_07_21_0065@{ i } A_2024_07_21_0069@{ i } .

(** 七です。 *)

Definition A_2024_07_21_0071@{ i | } : A_2024_07_21_0063@{ i } := A_2024_07_21_0065@{ i } A_2024_07_21_0070@{ i } .

(** 八です。 *)

Definition A_2024_07_21_0072@{ i | } : A_2024_07_21_0063@{ i } := A_2024_07_21_0065@{ i } A_2024_07_21_0071@{ i } .

(** 九です。 *)

Definition A_2024_07_21_0073@{ i | } : A_2024_07_21_0063@{ i } := A_2024_07_21_0065@{ i } A_2024_07_21_0072@{ i } .

(** 十です。 *)

Definition A_2024_07_21_0074@{ i | } : A_2024_07_21_0063@{ i } := A_2024_07_21_0065@{ i } A_2024_07_21_0073@{ i } .

(** 二を足します。 *)

Definition A_2024_07_21_0075@{ i | } ( x : A_2024_07_21_0063@{ i } ) : A_2024_07_21_0063@{ i }
    := A_2024_07_21_0065@{ i } ( A_2024_07_21_0065@{ i } x )
.

(** 三を足します。 *)

Definition A_2024_07_21_0076@{ i | } ( x : A_2024_07_21_0063@{ i } ) : A_2024_07_21_0063@{ i }
    := A_2024_07_21_0065@{ i } ( A_2024_07_21_0075@{ i } x )
.

(** 四を足します。 *)

Definition A_2024_07_21_0077@{ i | } ( x : A_2024_07_21_0063@{ i } ) : A_2024_07_21_0063@{ i }
    := A_2024_07_21_0065@{ i } ( A_2024_07_21_0076@{ i } x )
.

(** 五を足します。 *)

Definition A_2024_07_21_0078@{ i | } ( x : A_2024_07_21_0063@{ i } ) : A_2024_07_21_0063@{ i }
    := A_2024_07_21_0065@{ i } ( A_2024_07_21_0077@{ i } x )
.

(** 六を足します。 *)

Definition A_2024_07_21_0079@{ i | } ( x : A_2024_07_21_0063@{ i } ) : A_2024_07_21_0063@{ i }
    := A_2024_07_21_0065@{ i } ( A_2024_07_21_0078@{ i } x )
.

(** 七を足します。 *)

Definition A_2024_07_21_0080@{ i | } ( x : A_2024_07_21_0063@{ i } ) : A_2024_07_21_0063@{ i }
    := A_2024_07_21_0065@{ i } ( A_2024_07_21_0079@{ i } x )
.

(** 八を足します。 *)

Definition A_2024_07_21_0081@{ i | } ( x : A_2024_07_21_0063@{ i } ) : A_2024_07_21_0063@{ i }
    := A_2024_07_21_0065@{ i } ( A_2024_07_21_0080@{ i } x )
.

(** 九を足します。 *)

Definition A_2024_07_21_0082@{ i | } ( x : A_2024_07_21_0063@{ i } ) : A_2024_07_21_0063@{ i }
    := A_2024_07_21_0065@{ i } ( A_2024_07_21_0081@{ i } x )
.

(** 十を足します。 *)

Definition A_2024_07_21_0083@{ i | } ( x : A_2024_07_21_0063@{ i } ) : A_2024_07_21_0063@{ i }
    := A_2024_07_21_0065@{ i } ( A_2024_07_21_0082@{ i } x )
.

(** 足します。 *)

Definition A_2024_07_22_0000@{ i | } ( x : A_2024_07_21_0063@{ i } ) ( y : A_2024_07_21_0063@{ i } ) : A_2024_07_21_0063@{ i }
    :=
        let
            fix a ( x : A_2024_07_21_0063@{ i } ) ( y : A_2024_07_21_0063@{ i } ) { struct x } : A_2024_07_21_0063@{ i }
                :=
                    match
                        x , y
                    with
                        A_2024_07_21_0064 , A_2024_07_21_0064 => A_2024_07_21_0066@{ i }
                        |
                        A_2024_07_21_0064 , A_2024_07_21_0065 y_前 => A_2024_07_21_0065@{ i } ( A_2024_07_21_0065@{ i } y_前 )
                        |
                        A_2024_07_21_0065 x_前 , A_2024_07_21_0064 => A_2024_07_21_0065@{ i } ( A_2024_07_21_0065@{ i } x_前 )
                        |
                        A_2024_07_21_0065 x_前 , A_2024_07_21_0065 y_前
                            => A_2024_07_21_0065@{ i } ( A_2024_07_21_0065@{ i } ( a x_前 y_前 ) )
                    end
        in
            a x y
.

(** 掛けます。 *)

Definition A_2024_07_22_0001@{ i | } ( x : A_2024_07_21_0063@{ i } ) ( y : A_2024_07_21_0063@{ i } ) : A_2024_07_21_0063@{ i }
    :=
        let
            fix a ( x : A_2024_07_21_0063@{ i } ) ( y : A_2024_07_21_0063@{ i } ) { struct y } : A_2024_07_21_0063@{ i }
                :=
                    match
                        y
                    with
                        A_2024_07_21_0064 => x
                        |
                        A_2024_07_21_0065 y_前 => A_2024_07_22_0000@{ i } x ( a x y_前 )
                    end
        in
            a x y
.

(** 冪乗です。 *)

Definition A_2024_07_22_0002@{ i | } : A_2024_07_21_0063@{ i } -> A_2024_07_21_0063@{ i } -> A_2024_07_21_0063@{ i }
    :=
        fix a ( x : A_2024_07_21_0063@{ i } ) ( y : A_2024_07_21_0063@{ i } ) { struct y } : A_2024_07_21_0063@{ i }
            :=
                match
                    y
                with
                    A_2024_07_21_0064 => x
                    |
                    A_2024_07_21_0065 y_前 => A_2024_07_22_0001@{ i } x ( a x y_前 )
                end
.

(** テトレーションです。 *)

Definition A_2024_07_22_0003@{ i | } : A_2024_07_21_0063@{ i } -> A_2024_07_21_0063@{ i } -> A_2024_07_21_0063@{ i }
    :=
        fix a ( x : A_2024_07_21_0063@{ i } ) ( y : A_2024_07_21_0063@{ i } ) { struct y } : A_2024_07_21_0063@{ i }
            :=
                match
                    y
                with
                    A_2024_07_21_0064 => x
                    |
                    A_2024_07_21_0065 y_前 => A_2024_07_22_0002@{ i } x ( a x y_前 )
                end
.

(** 最小値です。 *)

Definition A_2024_07_22_0004@{ i | } ( x : A_2024_07_21_0063@{ i } ) ( y : A_2024_07_21_0063@{ i } ) : A_2024_07_21_0063@{ i }
    :=
        let
            fix a ( x : A_2024_07_21_0063@{ i } ) ( y : A_2024_07_21_0063@{ i } ) { struct x } : A_2024_07_21_0063@{ i }
                :=
                    match
                        x , y
                    with
                        A_2024_07_21_0064 , A_2024_07_21_0064 => A_2024_07_21_0064@{ i }
                        |
                        A_2024_07_21_0064 , A_2024_07_21_0065 y_前 => A_2024_07_21_0064@{ i }
                        |
                        A_2024_07_21_0065 x_前 , A_2024_07_21_0064 => A_2024_07_21_0064@{ i }
                        |
                        A_2024_07_21_0065 x_前 , A_2024_07_21_0065 y_前 => A_2024_07_21_0065@{ i } ( a x_前 y_前 )
                    end
        in
            a x y
.

(** 最大値です。 *)

Definition A_2024_07_22_0005@{ i | } ( x : A_2024_07_21_0063@{ i } ) ( y : A_2024_07_21_0063@{ i } ) : A_2024_07_21_0063@{ i }
    :=
        let
            fix a ( x : A_2024_07_21_0063@{ i } ) ( y : A_2024_07_21_0063@{ i } ) { struct x } : A_2024_07_21_0063@{ i }
                :=
                    match
                        x , y
                    with
                        A_2024_07_21_0064 , A_2024_07_21_0064 => A_2024_07_21_0064@{ i }
                        |
                        A_2024_07_21_0064 , A_2024_07_21_0065 y_前 => A_2024_07_21_0065@{ i } y_前
                        |
                        A_2024_07_21_0065 x_前 , A_2024_07_21_0064 => A_2024_07_21_0065@{ i } x_前
                        |
                        A_2024_07_21_0065 x_前 , A_2024_07_21_0065 y_前 => A_2024_07_21_0065@{ i } ( a x_前 y_前 )
                    end
        in
            a x y
.

(** 三角数です。 *)

Definition A_2024_07_22_0006@{ i | } ( x : A_2024_07_21_0063@{ i } ) : A_2024_07_21_0063@{ i }
    :=
        let
            fix a ( x : A_2024_07_21_0063@{ i } ) { struct x } : A_2024_07_21_0063@{ i }
                :=
                    match
                        x
                    with
                        A_2024_07_21_0064 => A_2024_07_21_0064@{ i }
                        |
                        A_2024_07_21_0065 x_前 => A_2024_07_22_0000@{ i } x ( a x_前 )
                    end
        in
            a x
.

(** 階乗です。 *)

Definition A_2024_07_22_0007@{ i | } ( x : A_2024_07_21_0063@{ i } ) : A_2024_07_21_0063@{ i }
    :=
        let
            fix a ( x : A_2024_07_21_0063@{ i } ) { struct x } : A_2024_07_21_0063@{ i }
                :=
                    match
                        x
                    with
                        A_2024_07_21_0064 => A_2024_07_21_0064@{ i }
                        |
                        A_2024_07_21_0065 x_前 => A_2024_07_22_0001@{ i } x ( a x_前 )
                    end
        in
            a x
.

(** フィボナッチ数列です。 *)

Definition A_2024_07_22_0008@{ i | } ( x : A_2024_07_21_0063@{ i } ) : A_2024_07_21_0063@{ i }
    :=
        let
            fix a ( x : A_2024_07_21_0063@{ i } ) ( y : A_2024_07_21_0063@{ i } ) ( z : A_2024_07_21_0063@{ i } ) { struct x }
                : A_2024_07_21_0063@{ i }
                :=
                    match
                        x
                    with
                        A_2024_07_21_0064 => y
                        |
                        A_2024_07_21_0065 x_前 => a x_前 z ( A_2024_07_22_0000@{ i } y z )
                    end
        in
            a x A_2024_07_21_0064@{ i } A_2024_07_21_0064@{ i }
.

(** 整数を定義します。 *)

Inductive A_2024_07_22_0016@{ i | } : Type@{ i }
    :=
        A_2024_07_22_0017 : A_2024_07_21_0063@{ i } -> A_2024_07_22_0016
        |
        A_2024_07_22_0018 : A_2024_07_22_0016
        |
        A_2024_07_22_0019 : A_2024_07_21_0063@{ i } -> A_2024_07_22_0016
.

(** 後者を計算します。 *)

Definition A_2024_07_22_0020@{ i | } ( x : A_2024_07_22_0016@{ i } ) : A_2024_07_22_0016@{ i }
    :=
        match
            x
        with
            A_2024_07_22_0017 x_負
                =>
                    match
                        x_負
                    with
                        A_2024_07_21_0064 => A_2024_07_22_0018@{ i }
                        |
                        A_2024_07_21_0065 x_負_前 => A_2024_07_22_0017@{ i } x_負_前
                    end
            |
            A_2024_07_22_0018 => A_2024_07_22_0019@{ i } A_2024_07_21_0064@{ i }
            |
            A_2024_07_22_0019 x_正 => A_2024_07_22_0019@{ i } ( A_2024_07_21_0065@{ i } x_正 )
        end
.

(** 前者を計算します。 *)

Definition A_2024_07_22_0021@{ i | } ( x : A_2024_07_22_0016@{ i } ) : A_2024_07_22_0016@{ i }
    :=
        match
            x
        with
            A_2024_07_22_0017 x_負 => A_2024_07_22_0017@{ i } ( A_2024_07_21_0065@{ i } x_負 )
            |
            A_2024_07_22_0018 => A_2024_07_22_0017@{ i } A_2024_07_21_0064@{ i }
            |
            A_2024_07_22_0019 x_正
                =>
                    match
                        x_正
                    with
                        A_2024_07_21_0064 => A_2024_07_22_0018@{ i }
                        |
                        A_2024_07_21_0065 x_正_前 => A_2024_07_22_0019@{ i } x_正_前
                    end
        end
.

(** [x] を取り、 [y] を取り、 [x - y] を計算する。 [x] は 1 始まりの自然数である。 [y] は 1 始まりの自然数である。 [x - y] は整数である。 *)

Definition A_2024_07_22_0022@{ i | } ( x : A_2024_07_21_0063@{ i } ) ( y : A_2024_07_21_0063@{ i } ) : A_2024_07_22_0016@{ i }
    :=
        let
            fix a ( x : A_2024_07_21_0063@{ i } ) ( y : A_2024_07_21_0063@{ i } ) { struct x } : A_2024_07_22_0016@{ i }
                :=
                    match
                        x , y
                    with
                        A_2024_07_21_0064 , A_2024_07_21_0064 => A_2024_07_22_0018@{ i }
                        |
                        A_2024_07_21_0064 , A_2024_07_21_0065 y_前 => A_2024_07_22_0017@{ i } y_前
                        |
                        A_2024_07_21_0065 x_前 , A_2024_07_21_0064 => A_2024_07_22_0019@{ i } x_前
                        |
                        A_2024_07_21_0065 x_前 , A_2024_07_21_0065 y_前 => a x_前 y_前
                    end
        in
            a x y
.

(** [x] を取り、 [y] を取り、 [y - x] を計算する。 [x] は 1 始まりの自然数である。 [y] は 1 始まりの自然数である。 [y - x] は整数である。 *)

Definition A_2024_07_22_0023@{ i | } ( x : A_2024_07_21_0063@{ i } ) ( y : A_2024_07_21_0063@{ i } ) : A_2024_07_22_0016@{ i }
    :=
        let
            fix a ( x : A_2024_07_21_0063@{ i } ) ( y : A_2024_07_21_0063@{ i } ) { struct x } : A_2024_07_22_0016@{ i }
                :=
                    match
                        x , y
                    with
                        A_2024_07_21_0064 , A_2024_07_21_0064 => A_2024_07_22_0018@{ i }
                        |
                        A_2024_07_21_0064 , A_2024_07_21_0065 y_前 => A_2024_07_22_0019@{ i } y_前
                        |
                        A_2024_07_21_0065 x_前 , A_2024_07_21_0064 => A_2024_07_22_0017@{ i } x_前
                        |
                        A_2024_07_21_0065 x_前 , A_2024_07_21_0065 y_前 => a x_前 y_前
                    end
        in
            a x y
.

(** 足します。 *)

Definition A_2024_07_22_0024@{ i | } ( x : A_2024_07_22_0016@{ i } ) ( y : A_2024_07_22_0016@{ i } ) : A_2024_07_22_0016@{ i }
    :=
        match
            x , y
        with
            A_2024_07_22_0017 x_負 , A_2024_07_22_0017 y_負 => A_2024_07_22_0017@{ i } ( A_2024_07_22_0000@{ i } x_負 y_負 )
            |
            A_2024_07_22_0017 x_負 , A_2024_07_22_0018 => A_2024_07_22_0017@{ i } x_負
            |
            A_2024_07_22_0017 x_負 , A_2024_07_22_0019 y_正 => A_2024_07_22_0023@{ i } x_負 y_正
            |
            A_2024_07_22_0018 , A_2024_07_22_0017 y_負 => A_2024_07_22_0017@{ i } y_負
            |
            A_2024_07_22_0018 , A_2024_07_22_0018 => A_2024_07_22_0018@{ i }
            |
            A_2024_07_22_0018 , A_2024_07_22_0019 y_正 => A_2024_07_22_0019@{ i } y_正
            |
            A_2024_07_22_0019 x_正 , A_2024_07_22_0017 y_負 => A_2024_07_22_0022@{ i } x_正 y_負
            |
            A_2024_07_22_0019 x_正 , A_2024_07_22_0018 => A_2024_07_22_0019@{ i } x_正
            |
            A_2024_07_22_0019 x_正 , A_2024_07_22_0019 y_正 => A_2024_07_22_0019@{ i } ( A_2024_07_22_0000@{ i } x_正 y_正 )
        end
.

(** 符号を反転する。 *)

Definition A_2024_07_22_0025@{ i } ( x : A_2024_07_22_0016@{ i } ) : A_2024_07_22_0016@{ i }
    :=
        match
            x
        with
            A_2024_07_22_0017 x_負 => A_2024_07_22_0019@{ i } x_負
            |
            A_2024_07_22_0018 => A_2024_07_22_0018@{ i }
            |
            A_2024_07_22_0019 x_正 => A_2024_07_22_0017@{ i } x_正
        end
.

(** 掛ける。 *)

Definition A_2024_07_22_0026@{ i | } ( x : A_2024_07_22_0016@{ i } ) ( y : A_2024_07_22_0016@{ i } ) : A_2024_07_22_0016@{ i }
    :=
        match
            x , y
        with
            A_2024_07_22_0017 x_負 , A_2024_07_22_0017 y_負 => A_2024_07_22_0019@{ i } ( A_2024_07_22_0001@{ i } x_負 y_負 )
            |
            A_2024_07_22_0017 x_負 , A_2024_07_22_0018 => A_2024_07_22_0018@{ i }
            |
            A_2024_07_22_0017 x_負 , A_2024_07_22_0019 y_正 => A_2024_07_22_0017@{ i } ( A_2024_07_22_0001@{ i } x_負 y_正 )
            |
            A_2024_07_22_0018 , A_2024_07_22_0017 y_負 => A_2024_07_22_0018@{ i }
            |
            A_2024_07_22_0018 , A_2024_07_22_0018 => A_2024_07_22_0018@{ i }
            |
            A_2024_07_22_0018 , A_2024_07_22_0019 y_正 => A_2024_07_22_0018@{ i }
            |
            A_2024_07_22_0019 x_正 , A_2024_07_22_0017 y_負 => A_2024_07_22_0017@{ i } ( A_2024_07_22_0001@{ i } x_正 y_負 )
            |
            A_2024_07_22_0019 x_正 , A_2024_07_22_0018 => A_2024_07_22_0018@{ i }
            |
            A_2024_07_22_0019 x_正 , A_2024_07_22_0019 y_正 => A_2024_07_22_0019@{ i } ( A_2024_07_22_0001@{ i } x_正 y_正 )
        end
.

(** 列記です。「列記」は "list" の訳語です。 *)

Inductive A_2024_08_16_0000@{ i | } ( A : Type@{ i } ) : Type@{ i }
    :=
        A_2024_08_16_0001 : A_2024_08_16_0000 A
        |
        A_2024_08_16_0002 : A -> A_2024_08_16_0000 A -> A_2024_08_16_0000 A
.

(** 折り畳みます。 *)

Definition A_2024_08_16_0003@{ i | }
        ( A : Type@{ i } )
        ( B : Type@{ i } )
        ( x : A )
        ( y : B -> A -> A )
        ( z : A_2024_08_16_0000@{ i } B )
    : A
    :=
        let
            fix a ( z_ : A_2024_08_16_0000@{ i } B ) { struct z_ } : A
                :=
                    match
                        z_
                    with
                        A_2024_08_16_0001 _ => x
                        |
                        A_2024_08_16_0002 _ z_1 z_2 => y z_1 ( a z_2 )
                    end
        in
            a z
.

(** 関数を列記へ適用します。 *)

Definition A_2024_08_16_0004@{ i | }
        ( A : Type@{ i } )
        ( B : Type@{ i } )
        ( f : B -> A )
        ( x : A_2024_08_16_0000@{ i } B )
    : A_2024_08_16_0000@{ i } A
    :=
        let
            fix a ( x_ : A_2024_08_16_0000@{ i } B ) { struct x_ } : A_2024_08_16_0000@{ i } A
                :=
                    match
                        x_
                    with
                        A_2024_08_16_0001 _ => A_2024_08_16_0001@{ i } A
                        |
                        A_2024_08_16_0002 _ x_1 x_2 => A_2024_08_16_0002@{ i } A ( f x_1 ) ( a x_2 )
                    end
        in
            a x
.

(** 長さを求めます。 *)

Definition A_2024_08_16_0005@{ i | } ( A : Type@{ i } ) ( x : A_2024_08_16_0000@{ i } A ) : A_2024_07_21_0031@{ i }
    :=
        let
            fix a ( x_ : A_2024_08_16_0000@{ i } A ) { struct x_ } : A_2024_07_21_0031@{ i }
                :=
                    match
                        x_
                    with
                        A_2024_08_16_0001 _ => A_2024_07_21_0032@{ i }
                        |
                        A_2024_08_16_0002 _ x_1 x_2 => A_2024_07_21_0033@{ i } ( a x_2 )
                    end
        in
            a x
.

(** 総和を求めます。 *)

Definition A_2024_08_16_0006@{ i | } ( x : A_2024_08_16_0000@{ i } A_2024_07_21_0031@{ i } ) : A_2024_07_21_0031@{ i }
    :=
        let
            fix a ( x_ : A_2024_08_16_0000@{ i } A_2024_07_21_0031@{ i } ) { struct x_ } : A_2024_07_21_0031@{ i }
                :=
                    match
                        x_
                    with
                        A_2024_08_16_0001 _ => A_2024_07_21_0032@{ i }
                        |
                        A_2024_08_16_0002 _ x_1 x_2 => A_2024_07_21_0053@{ i } x_1 ( a x_2 )
                    end
        in
            a x
.

(** 総乗を求めます。 *)

Definition A_2024_08_16_0007@{ i | } ( x : A_2024_08_16_0000@{ i } A_2024_07_21_0031@{ i } ) : A_2024_07_21_0031@{ i }
    :=
        let
            fix a ( x_ : A_2024_08_16_0000@{ i } A_2024_07_21_0031@{ i } ) { struct x_ } : A_2024_07_21_0031@{ i }
                :=
                    match
                        x_
                    with
                        A_2024_08_16_0001 _ => A_2024_07_21_0034@{ i }
                        |
                        A_2024_08_16_0002 _ x_1 x_2 => A_2024_07_21_0054@{ i } x_1 ( a x_2 )
                    end
        in
            a x
.

(** 結合します。 *)

Definition A_2024_08_16_0008@{ i | } ( A : Type@{ i } ) ( x : A_2024_08_16_0000@{ i } A ) ( y : A_2024_08_16_0000@{ i } A )
    : A_2024_08_16_0000@{ i } A
    :=
        let
            fix a ( x_ : A_2024_08_16_0000@{ i } A ) ( y_ : A_2024_08_16_0000@{ i } A ) { struct x_ } : A_2024_08_16_0000@{ i } A
                :=
                    match
                        x_
                    with
                        A_2024_08_16_0001 _ => y_
                        |
                        A_2024_08_16_0002 _ x_1 x_2 => A_2024_08_16_0002@{ i } A x_1 ( a x_2 y_ )
                    end
        in
            a x y
.

(** 結合します。 *)

Definition A_2024_08_16_0009@{ i | } ( A : Type@{ i } ) ( x : A_2024_08_16_0000@{ i } ( A_2024_08_16_0000@{ i } A ) )
    : A_2024_08_16_0000@{ i } A
    :=
        let
            fix a ( x_ : A_2024_08_16_0000@{ i } ( A_2024_08_16_0000@{ i } A ) ) { struct x_ } : A_2024_08_16_0000@{ i } A
                :=
                    match
                        x_
                    with
                        A_2024_08_16_0001 _ => A_2024_08_16_0001@{ i } A
                        |
                        A_2024_08_16_0002 _ x_1 x_2 => A_2024_08_16_0008@{ i } A x_1 ( a x_2 )
                    end
        in
            a x
.

(** 反転します。 *)

Definition A_2024_08_16_0010@{ i | } ( A : Type@{ i } ) ( x : A_2024_08_16_0000@{ i } A ) : A_2024_08_16_0000@{ i } A
    :=
        let
            fix a ( x_ : A_2024_08_16_0000@{ i } A ) ( y : A_2024_08_16_0000@{ i } A ) { struct x_ } : A_2024_08_16_0000@{ i } A
                :=
                    match
                        x_
                    with
                        A_2024_08_16_0001 _ => y
                        |
                        A_2024_08_16_0002 _ x_1 x_2 => a x_2 ( A_2024_08_16_0002@{ i } A x_1 y )
                    end
        in
            a x ( A_2024_08_16_0001@{ i } A )
.

(** [A] から [B] への関数と [B] から [A] への関数の直積です。 *)

Inductive A_2024_08_02_0004@{ i | } ( A : Type@{ i } ) ( B : Type@{ i } ) : Type@{ i }
    := A_2024_08_02_0005 : ( A -> B ) -> ( B -> A ) -> A_2024_08_02_0004 A B
.

(** [A] から [B] への関数と [B] から [A] への関数の直積の一番目の区域の値を取り出します。 *)

Definition A_2024_08_02_0006@{ i | } ( A : Type@{ i } ) ( B : Type@{ i } ) ( x : A_2024_08_02_0004@{ i } B A ) ( y : B ) : A
    := match x with A_2024_08_02_0005 _ _ x_1 x_2 => x_1 y end
.

(** [A] から [B] への関数と [B] から [A] への関数の直積の二番目の区域の値を取り出します。 *)

Definition A_2024_08_02_0007@{ i | } ( A : Type@{ i } ) ( B : Type@{ i } ) ( x : A_2024_08_02_0004@{ i } A B ) ( y : B ) : A
    := match x with A_2024_08_02_0005 _ _ x_1 x_2 => x_2 y end
.

(** [A] と [A] の否定の直積の否定です。 *)

Definition A_2024_08_02_0008@{ i | } ( A : Type@{ i } )
    : A_2024_08_01_0001@{ i } ( A_2024_07_21_0013@{ i } A ( A_2024_08_01_0001@{ i } A ) )
    :=
        A_2024_08_01_0002@{ i }
            ( A_2024_07_21_0013@{ i } A ( A_2024_08_01_0001@{ i } A ) )
            (
                let
                    a ( z : A_2024_07_21_0013@{ i } A ( A_2024_08_01_0001@{ i } A ) ) : 空型@{ i }
                        :=
                            A_2024_08_01_0003@{ i }
                                A
                                ( A_2024_07_21_0016@{ i } ( A_2024_08_01_0001@{ i } A ) A z )
                                ( A_2024_07_21_0015@{ i } A ( A_2024_08_01_0001@{ i } A ) z )
                in
                    a
            )
.

(** [A] から [A] の否定への関数と [A] の否定から [A] への関数の直積の否定です。 *)

Definition A_2024_08_02_0009@{ i | } ( A : Type@{ i } )
    : A_2024_08_01_0001@{ i } ( A_2024_08_02_0004@{ i } A ( A_2024_08_01_0001@{ i } A ) )
    :=
        A_2024_08_01_0002@{ i }
            ( A_2024_08_02_0004@{ i } A ( A_2024_08_01_0001@{ i } A ) )
            (
                let
                    a ( z : A_2024_08_02_0004@{ i } A ( A_2024_08_01_0001@{ i } A ) ) : 空型@{ i }
                        :=
                            let
                                a : A_2024_08_01_0001@{ i } A
                                    :=
                                        A_2024_08_01_0002@{ i }
                                            A
                                            (
                                                let
                                                    a ( w : A ) : 空型@{ i }
                                                        :=
                                                            A_2024_08_01_0003@{ i }
                                                                A
                                                                ( A_2024_08_02_0006@{ i } ( A_2024_08_01_0001@{ i } A ) A z w )
                                                                w
                                                in
                                                    a
                                            )
                            in
                                A_2024_08_01_0003@{ i } A a ( A_2024_08_02_0007@{ i } A ( A_2024_08_01_0001@{ i } A ) z a )
                in
                    a
            )
.

(** [A] の値から [A] の否定の否定の値を得ます。 *)

Definition A_2024_08_06_0000@{ i | } ( A : Type@{ i } ) ( x : A ) : A_2024_08_01_0001@{ i } ( A_2024_08_01_0001@{ i } A )
    :=
        A_2024_08_01_0002@{ i }
            ( A_2024_08_01_0001@{ i } A )
            (
                let
                    a ( y : A_2024_08_01_0001@{ i } A ) : 空型@{ i }
                        :=
                            A_2024_08_01_0003@{ i } A y x
                in
                    a
            )
.

(** [A] から [B] への関数から [A] の否定の否定から [B] の否定の否定への関数を得ます。 *)

Definition A_2024_08_06_0001@{ i | }
        ( A : Type@{ i } )
        ( B : Type@{ i } )
        ( f : B -> A )
        ( x : A_2024_08_01_0001@{ i } ( A_2024_08_01_0001@{ i } B ) )
    : A_2024_08_01_0001@{ i } ( A_2024_08_01_0001@{ i } A )
    :=
        A_2024_08_01_0002@{ i }
            ( A_2024_08_01_0001@{ i } A )
            (
                let
                    a ( y : A_2024_08_01_0001@{ i } A ) : 空型@{ i }
                        :=
                            let
                                a : A_2024_08_01_0001@{ i } B
                                    :=
                                        A_2024_08_01_0004@{ i } B A f y
                            in
                                A_2024_08_01_0003@{ i } ( A_2024_08_01_0001@{ i } B ) x a
                in
                    a
            )
.

(** [A] から [B] の否定の否定への関数から [A] の否定の否定から [B] の否定の否定への関数を得ます。 *)

Definition A_2024_08_06_0002@{ i | }
        ( A : Type@{ i } )
        ( B : Type@{ i } )
        ( f : B -> A_2024_08_01_0001@{ i } ( A_2024_08_01_0001@{ i } A ) )
        ( x : A_2024_08_01_0001@{ i } ( A_2024_08_01_0001@{ i } B ) )
    : A_2024_08_01_0001@{ i } ( A_2024_08_01_0001@{ i } A )
    :=
        A_2024_08_01_0002@{ i }
            ( A_2024_08_01_0001@{ i } A )
            (
                let
                    a ( y : A_2024_08_01_0001@{ i } A ) : 空型@{ i }
                        :=
                            let
                                a : A_2024_08_01_0001@{ i } B
                                    :=
                                        A_2024_08_01_0002@{ i }
                                            B
                                            (
                                                let
                                                    a ( z : B ) : 空型@{ i }
                                                        :=
                                                            A_2024_08_01_0003@{ i } ( A_2024_08_01_0001@{ i } A ) ( f z ) y
                                                in
                                                    a
                                            )
                            in
                                A_2024_08_01_0003@{ i } ( A_2024_08_01_0001@{ i } B ) x a
                in
                    a
            )
.

(** [A] の否定の否定から [A] への関数の否定の否定です。 *)

Definition A_2024_08_09_0000@{ i | } ( A : Type@{ i } )
    : A_2024_08_01_0001@{ i } ( A_2024_08_01_0001@{ i } ( A_2024_08_01_0001@{ i } ( A_2024_08_01_0001@{ i } A ) -> A ) )
.
Proof .
    refine ( A_2024_08_01_0002@{ i } ( A_2024_08_01_0001@{ i } ( A_2024_08_01_0001@{ i } ( A_2024_08_01_0001@{ i } A ) -> A ) ) _ ) .
    refine
        (
            let
                a ( x : A_2024_08_01_0001@{ i } ( A_2024_08_01_0001@{ i } ( A_2024_08_01_0001@{ i } A ) -> A ) )
                    : 空型@{ i }
                    := _
            in
                a
        )
    .
    refine ( A_2024_08_01_0003@{ i } ( A_2024_08_01_0001@{ i } ( A_2024_08_01_0001@{ i } A ) -> A ) x _ ) .
    refine
        (
            let
                a ( y : A_2024_08_01_0001@{ i } ( A_2024_08_01_0001@{ i } A ) ) : A := _
            in
                a
        )
    .
    refine ( 空型.場合分け@{ i } A _ ) .
    refine ( A_2024_08_01_0003@{ i } ( A_2024_08_01_0001@{ i } A ) y _ ) .
    refine ( A_2024_08_01_0002@{ i } A _ ) .
    refine
        (
            let
                a ( z : A ) : 空型@{ i } := _
            in
                a
        )
    .
    refine ( A_2024_08_01_0003@{ i } ( A_2024_08_01_0001@{ i } ( A_2024_08_01_0001@{ i } A ) -> A ) x _ ) .
    refine
        (
            let
                a ( w : A_2024_08_01_0001@{ i } ( A_2024_08_01_0001@{ i } A ) ) : A := _
            in
                a
        )
    .
    exact z .
Defined .

(** [A] から [B] への関数から [A] への関数から [A] への関数の否定の否定です。 *)

Definition A_2024_08_09_0001@{ i | } ( A : Type@{ i } ) ( B : Type@{ i } )
    : A_2024_08_01_0001@{ i } ( A_2024_08_01_0001@{ i } ( ( ( A -> B ) -> A ) -> A ) )
.
Proof .
    refine ( A_2024_08_01_0002@{ i } ( A_2024_08_01_0001@{ i } ( ( ( A -> B ) -> A ) -> A ) ) _ ) .
    refine
        (
            let
                a ( x : A_2024_08_01_0001@{ i } ( ( ( A -> B ) -> A ) -> A ) ) : 空型@{ i } := _
            in
                a
        )
    .
    refine ( A_2024_08_01_0003@{ i } ( ( ( A -> B ) -> A ) -> A ) x _ ) .
    refine
        (
            let
                a ( y : ( A -> B ) -> A ) : A := _
            in
                a
        )
    .
    refine ( y _ ) .
    refine
        (
            let
                a ( z : A ) : B := _
            in
                a
        )
    .
    refine ( 空型.場合分け@{ i } B _ ) .
    refine ( A_2024_08_01_0003@{ i } ( ( ( A -> B ) -> A ) -> A ) x _ ) .
    refine
        (
            let
                a ( w : ( A -> B ) -> A ) : A := _
            in
                a
        )
    .
    exact z .
Defined .

(** [A] から [B] への関数と [B] から [A] への関数の直和の否定の否定です。 *)

Definition A_2024_08_09_0002@{ i | } ( A : Type@{ i } ) ( B : Type@{ i } )
    : A_2024_08_01_0001@{ i } ( A_2024_08_01_0001@{ i } ( A_2024_07_21_0005@{ i } ( A -> B ) ( B -> A ) ) )
.
Proof .
    refine ( A_2024_08_01_0002@{ i } ( A_2024_08_01_0001@{ i } ( A_2024_07_21_0005@{ i } ( A -> B ) ( B -> A ) ) ) _ ) .
    refine
        (
            let
                a ( x : A_2024_08_01_0001@{ i } ( A_2024_07_21_0005@{ i } ( A -> B ) ( B -> A ) ) ) : 空型@{ i } := _
            in
                a
        )
    .
    refine ( A_2024_08_01_0003@{ i } ( A_2024_07_21_0005@{ i } ( A -> B ) ( B -> A ) ) x _ ) .
    refine ( A_2024_07_21_0006@{ i } ( A -> B ) ( B -> A ) _ ) .
    refine
        (
            let
                a ( y : A ) : B := _
            in
                a
        )
    .
    refine ( 空型.場合分け@{ i } B _ ) .
    refine ( A_2024_08_01_0003@{ i } ( A_2024_07_21_0005@{ i } ( A -> B ) ( B -> A ) ) x _ ) .
    refine ( A_2024_07_21_0007@{ i } ( A -> B ) ( B -> A ) _ ) .
    refine
        (
            let
                a ( z : B ) : A := _
            in
                a
        )
    .
    exact y .
Defined .

(** [A] と [A] の否定の直和の否定の否定です。 *)

Definition A_2024_08_09_0003@{ i | } ( A : Type@{ i } ) ( B : Type@{ i } )
    : A_2024_08_01_0001@{ i } ( A_2024_08_01_0001@{ i } ( A_2024_07_21_0005@{ i } A ( A_2024_08_01_0001@{ i } A ) ) )
.
Proof .
    refine ( A_2024_08_01_0002@{ i } ( A_2024_08_01_0001@{ i } ( A_2024_07_21_0005@{ i } A ( A_2024_08_01_0001@{ i } A ) ) ) _ ) .
    refine
        (
            let
                a ( x : A_2024_08_01_0001@{ i } ( A_2024_07_21_0005@{ i } A ( A_2024_08_01_0001@{ i } A ) ) )
                    : 空型@{ i }
                    := _
            in
                a
        )
    .
    refine ( A_2024_08_01_0003@{ i } ( A_2024_07_21_0005@{ i } A ( A_2024_08_01_0001@{ i } A ) ) x _ ) .
    refine ( A_2024_07_21_0007@{ i } A ( A_2024_08_01_0001@{ i } A ) _ ) .
    refine ( A_2024_08_01_0002@{ i } A _ ) .
    refine
        (
            let
                a ( y : A ) : 空型@{ i } := _
            in
                a
        )
    .
    refine ( A_2024_08_01_0003@{ i } ( A_2024_07_21_0005@{ i } A ( A_2024_08_01_0001@{ i } A ) ) x _ ) .
    refine ( A_2024_07_21_0006@{ i } A ( A_2024_08_01_0001@{ i } A ) _ ) .
    exact y .
Defined .

(** [A] と [A] の否定の直和から [A] の否定の否定から [A] への関数を得ます。 *)

Definition A_2024_08_11_0000@{ i | }
        ( A : Type@{ i } )
        ( x : A_2024_07_21_0005@{ i } A ( A_2024_08_01_0001@{ i } A ) )
        ( y : A_2024_08_01_0001@{ i } ( A_2024_08_01_0001@{ i } A ) )
    : A
.
Proof .
    refine
        (
            match
                x
            with
                A_2024_07_21_0006 _ _ x_左 => _
                |
                A_2024_07_21_0007 _ _ x_右 => _
            end
        )
    .
    {
        exact x_左 .
    }
    {
        refine ( 空型.場合分け@{ i } A _ ) .
        refine ( A_2024_08_01_0003@{ i } ( A_2024_08_01_0001@{ i } A ) y _ ) .
        exact x_右 .
    }
Defined .

(** [A] から [B] への関数の否定の否定と [P] と [P] の否定の直和から [A] から [B] への関数への関数と [P] と [P] の否定の直和から [A] から [B] への関数への関数から [A] から [B] への関数の否定の否定への関数の直積です。 *)

Definition A_2024_08_11_0001@{ i | }
        ( A : Type@{ i } )
        ( B : Type@{ i } )
    :
        A_2024_08_02_0004@{ i }
            ( A_2024_08_01_0001@{ i } ( A_2024_08_01_0001@{ i } ( B -> A ) ) )
            ( A_2024_07_21_0005@{ i } A ( A_2024_08_01_0001@{ i } A ) -> B -> A )
.
Proof .
    refine
        (
            A_2024_08_02_0005@{ i }
                ( A_2024_08_01_0001@{ i } ( A_2024_08_01_0001@{ i } ( B -> A ) ) )
                ( A_2024_07_21_0005@{ i } A ( A_2024_08_01_0001@{ i } A ) -> B -> A )
                _
                _
        )
    .
    {
        refine
            (
                let
                    a
                        ( x : A_2024_08_01_0001@{ i } ( A_2024_08_01_0001@{ i } ( B -> A ) ) )
                        ( y : A_2024_07_21_0005@{ i } A ( A_2024_08_01_0001@{ i } A ) )
                        ( z : B )
                        : A
                        := _
                in
                    a
            )
        .
        refine
            (
                match
                    y
                with
                    A_2024_07_21_0006 _ _ y_左 => _
                    |
                    A_2024_07_21_0007 _ _ y_右 => _
                end
            )
        .
        {
            exact y_左 .
        }
        {
            refine ( 空型.場合分け@{ i } A _ ) .
            refine ( A_2024_08_01_0003@{ i } ( A_2024_08_01_0001@{ i } ( B -> A ) ) x _ ) .
            refine ( A_2024_08_01_0002@{ i } ( B -> A ) _ ) .
            refine
                (
                    let
                        a ( w : B -> A ) : 空型@{ i } := _
                    in
                        a
                )
            .
            refine ( A_2024_08_01_0003@{ i } A y_右 _ ) .
            exact ( w z ) .
        }
    }
    {
        refine
            (
                let
                    a ( x : A_2024_07_21_0005@{ i } A ( A_2024_08_01_0001@{ i } A )  -> B -> A )
                        : A_2024_08_01_0001@{ i } ( A_2024_08_01_0001@{ i } ( B -> A ) )
                        := _
                in
                    a
            )
        .
        refine ( A_2024_08_01_0002@{ i } ( A_2024_08_01_0001@{ i } ( B -> A ) ) _ ) .
        refine
            (
                let
                    a ( y : A_2024_08_01_0001@{ i } ( B -> A ) ) : 空型@{ i } := _
                in
                    a
            )
        .
        refine ( A_2024_08_01_0003@{ i } ( B -> A ) y _ ) .
        refine
            (
                let
                    a ( z : B ) : A := _
                in
                    a
            )
        .
        refine ( x _ _ ) .
        {
            refine ( A_2024_07_21_0007@{ i } A ( A_2024_08_01_0001@{ i } A ) _ ) .
            refine ( A_2024_08_01_0002@{ i } A _ ) .
            refine
                (
                    let
                        a ( w : A ) : 空型@{ i } := _
                    in
                        a
                )
            .
            refine ( A_2024_08_01_0003@{ i } ( B -> A ) y _ ) .
            refine
                (
                    let
                        a ( v : B ) : A := _
                    in
                        a
                )
            .
            exact w .
        }
        {
            exact z .
        }
    }
Defined .

(** [A] の否定の否定の否定から [A] の否定を得ます。 *)

Definition A_2024_08_12_0000@{ i | }
        ( A : Type@{ i } )
        ( x : A_2024_08_01_0001@{ i } ( A_2024_08_01_0001@{ i } ( A_2024_08_01_0001@{ i } A ) ) )
    : A_2024_08_01_0001@{ i } A
    :=
        A_2024_08_01_0002@{ i }
            A
            (
                let
                    a ( y : A ) : 空型@{ i }
                        :=
                            A_2024_08_01_0003@{ i }
                                ( A_2024_08_01_0001@{ i } ( A_2024_08_01_0001@{ i } A ) )
                                x
                                (
                                    A_2024_08_01_0002@{ i }
                                        ( A_2024_08_01_0001@{ i } A )
                                        (
                                            let
                                                a ( z : A_2024_08_01_0001@{ i } A ) : 空型@{ i }
                                                    :=
                                                        A_2024_08_01_0003@{ i } A z y
                                            in
                                                a
                                        )
                                )

                in
                    a
            )
.

(** [A] から [B] の否定の否定への関数の否定の否定から [A] から [B] への否定の否定への関数を得ます。 *)

Definition A_2024_08_12_0001@{ i | }
        ( A : Type@{ i } )
        ( B : Type@{ i } )
        ( x : A_2024_08_01_0001@{ i } ( A_2024_08_01_0001@{ i } ( B -> A_2024_08_01_0001@{ i } ( A_2024_08_01_0001@{ i } A ) ) ) )
        ( y : B )
    : A_2024_08_01_0001@{ i } ( A_2024_08_01_0001@{ i } A )
.
Proof .
    refine ( A_2024_08_01_0002@{ i } ( A_2024_08_01_0001@{ i } A ) _ ) .
    refine
        (
            let
                a ( z : A_2024_08_01_0001@{ i } A ) : 空型@{ i } := _
            in
                a
        )
    .
    refine ( A_2024_08_01_0003@{ i } ( A_2024_08_01_0001@{ i } ( B -> A_2024_08_01_0001@{ i } ( A_2024_08_01_0001@{ i } A ) ) ) x _ ) .
    refine ( A_2024_08_01_0002@{ i } ( B -> A_2024_08_01_0001@{ i } ( A_2024_08_01_0001@{ i } A ) ) _ ) .
    refine
        (
            let
                a ( w : B -> A_2024_08_01_0001@{ i } ( A_2024_08_01_0001@{ i } A ) ) : 空型@{ i } := _
            in
                a
        )
    .
    refine
        (
            let
                a : A_2024_08_01_0001@{ i } ( A_2024_08_01_0001@{ i } A ) := w y
            in
                _
        )
    .
    refine ( A_2024_08_01_0003@{ i } ( A_2024_08_01_0001@{ i } A ) a _ ) .
    exact z .
Defined .

(** [A] の否定の否定と [B] の否定の否定の直積の否定の否定から [A] の否定の否定と [B] の否定の否定を得ます。 *)

Definition A_2024_08_12_0002@{ i | }
        ( A : Type@{ i } )
        ( B : Type@{ i } )
        (
            x
                :
                    A_2024_08_01_0001@{ i }
                        (
                            A_2024_08_01_0001@{ i }
                                (
                                    A_2024_07_21_0013@{ i }
                                        ( A_2024_08_01_0001@{ i } ( A_2024_08_01_0001@{ i } A ) )
                                        ( A_2024_08_01_0001@{ i } ( A_2024_08_01_0001@{ i } B ) )
                                )
                        )
        )
    :
        A_2024_07_21_0013@{ i }
            ( A_2024_08_01_0001@{ i } ( A_2024_08_01_0001@{ i } A ) )
            ( A_2024_08_01_0001@{ i } ( A_2024_08_01_0001@{ i } B ) )
.
Proof .
    refine
        (
            A_2024_07_21_0014@{ i }
                ( A_2024_08_01_0001@{ i } ( A_2024_08_01_0001@{ i } A ) )
                ( A_2024_08_01_0001@{ i } ( A_2024_08_01_0001@{ i } B ) )
                _
                _
        )
    .
    {
        refine ( A_2024_08_01_0002@{ i } ( A_2024_08_01_0001@{ i } A ) _ ) .
        refine
            (
                let
                    a ( y : A_2024_08_01_0001@{ i } A ) : 空型@{ i } := _
                in
                    a
            )
        .
        refine
            (
                A_2024_08_01_0003@{ i }
                    (
                        A_2024_08_01_0001@{ i }
                            (
                                A_2024_07_21_0013@{ i }
                                    ( A_2024_08_01_0001@{ i } ( A_2024_08_01_0001@{ i } A ) )
                                    ( A_2024_08_01_0001@{ i } ( A_2024_08_01_0001@{ i } B ) )
                            )
                    )
                    x
                    _
            )
        .
        refine
            (
                A_2024_08_01_0002@{ i }
                    (
                        A_2024_07_21_0013@{ i }
                            ( A_2024_08_01_0001@{ i } ( A_2024_08_01_0001@{ i } A ) )
                            ( A_2024_08_01_0001@{ i } ( A_2024_08_01_0001@{ i } B ) )
                    )
                    _
            )
        .
        refine
            (
                let
                    a
                            (
                                z
                                    :
                                        A_2024_07_21_0013@{ i }
                                            ( A_2024_08_01_0001@{ i } ( A_2024_08_01_0001@{ i } A ) )
                                            ( A_2024_08_01_0001@{ i } ( A_2024_08_01_0001@{ i } B ) )
                            )
                        : 空型@{ i }
                        := _
                in
                    a
            )
        .
        refine
            (
                let
                    z_1
                        : A_2024_08_01_0001@{ i } ( A_2024_08_01_0001@{ i } A )
                        :=
                            A_2024_07_21_0015@{ i }
                                ( A_2024_08_01_0001@{ i } ( A_2024_08_01_0001@{ i } A ) )
                                ( A_2024_08_01_0001@{ i } ( A_2024_08_01_0001@{ i } B ) )
                                z
                in
                    _
            )
        .
        refine ( A_2024_08_01_0003@{ i } ( A_2024_08_01_0001@{ i } A ) z_1 _ ) .
        exact y .
    }
    {
        refine ( A_2024_08_01_0002@{ i } ( A_2024_08_01_0001@{ i } B ) _ ) .
        refine
            (
                let
                    a ( y : A_2024_08_01_0001@{ i } B ) : 空型@{ i } := _
                in
                    a
            )
        .
        refine
            (
                A_2024_08_01_0003@{ i }
                    (
                        A_2024_08_01_0001@{ i }
                            (
                                A_2024_07_21_0013@{ i }
                                    ( A_2024_08_01_0001@{ i } ( A_2024_08_01_0001@{ i } A ) )
                                    ( A_2024_08_01_0001@{ i } ( A_2024_08_01_0001@{ i } B ) )
                            )
                    )
                    x
                    _
            )
        .
        refine
            (
                A_2024_08_01_0002@{ i }
                    (
                        A_2024_07_21_0013@{ i }
                            ( A_2024_08_01_0001@{ i } ( A_2024_08_01_0001@{ i } A ) )
                            ( A_2024_08_01_0001@{ i } ( A_2024_08_01_0001@{ i } B ) )
                    )
                    _
            )
        .
        refine
            (
                let
                    a
                            (
                                z
                                    :
                                        A_2024_07_21_0013@{ i }
                                            ( A_2024_08_01_0001@{ i } ( A_2024_08_01_0001@{ i } A ) )
                                            ( A_2024_08_01_0001@{ i } ( A_2024_08_01_0001@{ i } B ) )
                            )
                        : 空型@{ i }
                        := _
                in
                    a
            )
        .
        refine
            (
                let
                    z_2
                        : A_2024_08_01_0001@{ i } ( A_2024_08_01_0001@{ i } B )
                        :=
                            A_2024_07_21_0016@{ i }
                                ( A_2024_08_01_0001@{ i } ( A_2024_08_01_0001@{ i } B ) )
                                ( A_2024_08_01_0001@{ i } ( A_2024_08_01_0001@{ i } A ) )
                                z
                in
                    _
            )
        .
        refine ( A_2024_08_01_0003@{ i } ( A_2024_08_01_0001@{ i } B ) z_2 _ ) .
        exact y .
    }
Defined .

(** [A] と [B] の直積の否定の否定から [A] の否定の否定と [B] の否定の否定の直積への関数と [A] の否定の否定と [B] の否定の否定の直積から [A] と [B] の直積の否定の否定への関数の直積です。 *)

Definition A_2024_08_13_0000@{ i | }
        ( A : Type@{ i } )
        ( B : Type@{ i } )
    :
        A_2024_08_02_0004@{ i }
            ( A_2024_08_01_0001@{ i } ( A_2024_08_01_0001@{ i } ( A_2024_07_21_0013@{ i } A B ) ) )
            (
                A_2024_07_21_0013@{ i }
                    ( A_2024_08_01_0001@{ i } ( A_2024_08_01_0001@{ i } A ) )
                    ( A_2024_08_01_0001@{ i } ( A_2024_08_01_0001@{ i } B ) )
            )
.
Proof .
    refine
        (
            A_2024_08_02_0005@{ i }
                ( A_2024_08_01_0001@{ i } ( A_2024_08_01_0001@{ i } ( A_2024_07_21_0013@{ i } A B ) ) )
                (
                    A_2024_07_21_0013@{ i }
                        ( A_2024_08_01_0001@{ i } ( A_2024_08_01_0001@{ i } A ) )
                        ( A_2024_08_01_0001@{ i } ( A_2024_08_01_0001@{ i } B ) )
                )
                _
                _
        )
    .
    {
        refine
            (
                let
                    a ( x : A_2024_08_01_0001@{ i } ( A_2024_08_01_0001@{ i } ( A_2024_07_21_0013@{ i } A B ) ) )
                        :
                            A_2024_07_21_0013@{ i }
                                ( A_2024_08_01_0001@{ i } ( A_2024_08_01_0001@{ i } A ) )
                                ( A_2024_08_01_0001@{ i } ( A_2024_08_01_0001@{ i } B ) )
                        := _
                in
                    a
            )
        .
        refine
            (
                A_2024_07_21_0014@{ i }
                    ( A_2024_08_01_0001@{ i } ( A_2024_08_01_0001@{ i } A ) )
                    ( A_2024_08_01_0001@{ i } ( A_2024_08_01_0001@{ i } B ) )
                    _
                    _
            )
        .
        {
            refine
                (
                    A_2024_08_06_0001@{ i }
                        A
                        ( A_2024_07_21_0013@{ i } A B )
                        ( A_2024_07_21_0015@{ i } A B )
                        _
                )
            .
            exact x .
        }
        {
            refine
                (
                    A_2024_08_06_0001@{ i }
                        B
                        ( A_2024_07_21_0013@{ i } A B )
                        ( A_2024_07_21_0016@{ i } B A )
                        _
                )
            .
            exact x .
        }
    }
    {
        refine
            (
                let
                    a
                            (
                                x
                                    :
                                        A_2024_07_21_0013@{ i }
                                            ( A_2024_08_01_0001@{ i } ( A_2024_08_01_0001@{ i } A ) )
                                            ( A_2024_08_01_0001@{ i } ( A_2024_08_01_0001@{ i } B ) )
                            )
                        : A_2024_08_01_0001@{ i } ( A_2024_08_01_0001@{ i } ( A_2024_07_21_0013@{ i } A B ) )
                        := _
                in
                    a
            )
        .
        refine ( A_2024_08_01_0002@{ i } ( A_2024_08_01_0001@{ i } ( A_2024_07_21_0013@{ i } A B ) ) _ ) .
        refine
            (
                let
                    a ( y : A_2024_08_01_0001@{ i } ( A_2024_07_21_0013@{ i } A B ) ) : 空型@{ i } := _
                in
                    a
            )
        .
        refine
            (
                A_2024_08_01_0003@{ i }
                    ( A_2024_08_01_0001@{ i } A )
                    (
                        A_2024_07_21_0015@{ i }
                            ( A_2024_08_01_0001@{ i } ( A_2024_08_01_0001@{ i } A ) )
                            ( A_2024_08_01_0001@{ i } ( A_2024_08_01_0001@{ i } B ) )
                            x
                    )
                    _
            )
        .
        refine ( A_2024_08_01_0002@{ i } A _ ) .
        refine
            (
                let
                    a ( z : A ) : 空型@{ i } := _
                in
                    a
            )
        .
        refine
            (
                A_2024_08_01_0003@{ i }
                    ( A_2024_08_01_0001@{ i } B )
                    (
                        A_2024_07_21_0016@{ i }
                            ( A_2024_08_01_0001@{ i } ( A_2024_08_01_0001@{ i } B ) )
                            ( A_2024_08_01_0001@{ i } ( A_2024_08_01_0001@{ i } A ) )
                            x
                    )
                    _
            )
        .
        refine ( A_2024_08_01_0002@{ i } B _ ) .
        refine
            (
                let
                    a ( w : B ) : 空型@{ i } := _
                in
                    a
            )
        .
        refine ( A_2024_08_01_0003@{ i } ( A_2024_07_21_0013@{ i } A B ) y _ ) .
        exact ( A_2024_07_21_0014@{ i } A B z w ) .
    }
Defined .

(** [A] と [B] の直和の否定の否定から [A] の否定と [B] の否定の直積の否定への関数と [A] の否定と [B] の否定の直積の否定から [A] と [B] の直和の否定の否定への関数の直積です。 *)

Definition A_2024_08_14_0000@{ i | }
        ( A : Type@{ i } )
        ( B : Type@{ i } )
    :
        A_2024_08_02_0004@{ i }
            ( A_2024_08_01_0001@{ i } ( A_2024_08_01_0001@{ i } ( A_2024_07_21_0005@{ i } A B ) ) )
            ( A_2024_08_01_0001@{ i } ( A_2024_07_21_0013@{ i } ( A_2024_08_01_0001@{ i } A ) ( A_2024_08_01_0001@{ i } B ) ) )
.
Proof .
    refine
        (
            A_2024_08_02_0005@{ i }
                ( A_2024_08_01_0001@{ i } ( A_2024_08_01_0001@{ i } ( A_2024_07_21_0005@{ i } A B ) ) )
                ( A_2024_08_01_0001@{ i } ( A_2024_07_21_0013@{ i } ( A_2024_08_01_0001@{ i } A ) ( A_2024_08_01_0001@{ i } B ) ) )
                _
                _
        )
    .
    {
        refine
            (
                let
                    a ( x : A_2024_08_01_0001@{ i } ( A_2024_08_01_0001@{ i } ( A_2024_07_21_0005@{ i } A B ) ) )
                        :
                            A_2024_08_01_0001@{ i }
                                (
                                    A_2024_07_21_0013@{ i }
                                        ( A_2024_08_01_0001@{ i } A )
                                        ( A_2024_08_01_0001@{ i } B )
                                )
                        := _
                in
                    a
            )
        .
        refine ( A_2024_08_01_0002@{ i } ( A_2024_07_21_0013@{ i } ( A_2024_08_01_0001@{ i } A ) ( A_2024_08_01_0001@{ i } B ) ) _ ) .
        refine
            (
                let
                    a ( y : A_2024_07_21_0013@{ i } ( A_2024_08_01_0001@{ i } A ) ( A_2024_08_01_0001@{ i } B ) )
                        : 空型@{ i }
                        := _
                in
                    a
            )
        .
        refine ( A_2024_08_01_0003@{ i } ( A_2024_08_01_0001@{ i } ( A_2024_07_21_0005@{ i } A B ) ) x _ ) .
        refine ( A_2024_08_01_0002@{ i } ( A_2024_07_21_0005@{ i } A B ) _ ) .
        refine
            (
                let
                    a ( z : A_2024_07_21_0005@{ i } A B ) : 空型@{ i } := _
                in
                    a
            )
        .
        refine
            (
                match
                    z
                with
                    A_2024_07_21_0006 _ _ z_左 => _
                    |
                    A_2024_07_21_0007 _ _ z_右 => _
                end
            )
        .
        {
            refine
                (
                    A_2024_08_01_0003@{ i }
                        A
                        ( A_2024_07_21_0015@{ i } ( A_2024_08_01_0001@{ i } A ) ( A_2024_08_01_0001@{ i } B ) y )
                        _
                )
            .
            exact z_左 .
        }
        {
            refine
                (
                    A_2024_08_01_0003@{ i }
                        B
                        ( A_2024_07_21_0016@{ i } ( A_2024_08_01_0001@{ i } B ) ( A_2024_08_01_0001@{ i } A ) y )
                        _
                )
            .
            exact z_右 .
        }
    }
    {
        refine
            (
                let
                    a
                            (
                                x
                                    :
                                        A_2024_08_01_0001@{ i }
                                            (
                                                A_2024_07_21_0013@{ i }
                                                    ( A_2024_08_01_0001@{ i } A )
                                                    ( A_2024_08_01_0001@{ i } B )
                                            )
                            )
                        : A_2024_08_01_0001@{ i } ( A_2024_08_01_0001@{ i } ( A_2024_07_21_0005@{ i } A B ) )
                        := _
                in
                    a
            )
        .
        refine ( A_2024_08_01_0002@{ i } ( A_2024_08_01_0001@{ i } ( A_2024_07_21_0005@{ i } A B ) ) _ ) .
        refine
            (
                let
                    a ( y : A_2024_08_01_0001@{ i } ( A_2024_07_21_0005@{ i } A B ) ) : 空型@{ i } := _
                in
                    a
            )
        .
        refine
            (
                A_2024_08_01_0003@{ i }
                    ( A_2024_07_21_0013@{ i } ( A_2024_08_01_0001@{ i } A ) ( A_2024_08_01_0001@{ i } B ) )
                    x
                    _
            )
        .
        refine ( A_2024_07_21_0014@{ i } ( A_2024_08_01_0001@{ i } A ) ( A_2024_08_01_0001@{ i } B ) _ _ ) .
        {
            exact ( A_2024_08_01_0004@{ i } A ( A_2024_07_21_0005@{ i } A B ) ( A_2024_07_21_0006@{ i } A B ) y ) .
        }
        {
            exact ( A_2024_08_01_0004@{ i } B ( A_2024_07_21_0005@{ i } A B ) ( A_2024_07_21_0007@{ i } A B ) y ) .
        }
    }
Defined .

Definition A_2024_08_15_0000@{ i }
        ( A : Type@{ i } )
        ( B : Type@{ i } )
    :
        A_2024_08_02_0004@{ i }
            ( A_2024_08_01_0001@{ i } ( A_2024_08_01_0001@{ i } ( B -> A ) ) )
            ( A_2024_08_01_0001@{ i } ( A_2024_08_01_0001@{ i } B ) -> A_2024_08_01_0001@{ i } ( A_2024_08_01_0001@{ i } A ) )
.
Proof .
    refine
        (
            A_2024_08_02_0005@{ i }
                ( A_2024_08_01_0001@{ i } ( A_2024_08_01_0001@{ i } ( B -> A ) ) )
                ( A_2024_08_01_0001@{ i } ( A_2024_08_01_0001@{ i } B ) -> A_2024_08_01_0001@{ i } ( A_2024_08_01_0001@{ i } A ) )
                _
                _
        )
    .
    {
        refine
            (
                let
                    a
                            ( x : A_2024_08_01_0001@{ i } ( A_2024_08_01_0001@{ i } ( B -> A ) ) )
                            ( y : A_2024_08_01_0001@{ i } ( A_2024_08_01_0001@{ i } B ) )
                        : A_2024_08_01_0001@{ i } ( A_2024_08_01_0001@{ i } A )
                        := _
                in
                    a
            )
        .
        refine ( A_2024_08_01_0002@{ i } ( A_2024_08_01_0001@{ i } A ) _ ) .
        refine
            (
                let
                    a ( z : A_2024_08_01_0001@{ i } A ) : 空型@{ i } := _
                in
                    a
            )
        .
        refine ( A_2024_08_01_0003@{ i } ( A_2024_08_01_0001@{ i } ( B -> A ) ) x _ ) .
        refine ( A_2024_08_01_0002@{ i } ( B -> A ) _ ) .
        refine
            (
                let
                    a ( w : B -> A ) : 空型@{ i } := _
                in
                    a
            )
        .
        refine ( A_2024_08_01_0003@{ i } ( A_2024_08_01_0001@{ i } B ) y _ ) .
        refine ( A_2024_08_01_0002@{ i } B _ ) .
        refine
            (
                let
                    a ( v : B ) : 空型@{ i } := _
                in
                    a
            )
        .
        refine ( A_2024_08_01_0003@{ i } A z _ ) .
        exact ( w v ) .
    }
    {
        refine
            (
                let
                    a
                            (
                                x
                                    :
                                        A_2024_08_01_0001@{ i } ( A_2024_08_01_0001@{ i } B )
                                        ->
                                        A_2024_08_01_0001@{ i } ( A_2024_08_01_0001@{ i } A )
                            )
                        : A_2024_08_01_0001@{ i } ( A_2024_08_01_0001@{ i } ( B -> A ) )
                        := _
                in
                    a
            )
        .
        refine ( A_2024_08_01_0002@{ i } ( A_2024_08_01_0001@{ i } ( B -> A ) ) _ ) .
        refine
            (
                let
                    a ( y : A_2024_08_01_0001@{ i } ( B -> A ) ) : 空型@{ i } := _
                in
                    a
            )
        .
        refine ( A_2024_08_01_0003@{ i } ( B -> A ) y _ ) .
        refine
            (
                let
                    a ( z : B ) : A := _
                in
                    a
            )
        .
        refine
            (
                let
                    a : A_2024_08_01_0001@{ i } ( A_2024_08_01_0001@{ i } B ) := A_2024_08_06_0000@{ i } B z
                in
                    _
            )
        .
        refine ( 空型.場合分け@{ i } A _ ) .
        refine ( A_2024_08_01_0003@{ i } ( A_2024_08_01_0001@{ i } A ) ( x a ) _ ) .
        refine ( A_2024_08_01_0002@{ i } A _ ) .
        refine
            (
                let
                    b ( w : A ) : 空型@{ i } := _
                in
                    b
            )
        .
        refine ( A_2024_08_01_0003@{ i } ( B -> A ) y _ ) .
        refine
            (
                let
                    b ( v : B ) : A := _
                in
                    b
            )
        .
        exact w .
    }
Defined .

(** 道を定義します。「道」は "path" の訳語です。 *)

Inductive A_2024_07_22_0009@{ i | } ( A : Type@{ i } ) : A -> A -> Type@{ i }
    := A_2024_07_22_0010 : forall x : A , A_2024_07_22_0009 A x x
.

(** 結合です。 *)

Definition A_2024_07_22_0011@{ i | }
        ( A : Type@{ i } )
        ( x : A )
        ( y : A )
        ( z : A )
        ( p : A_2024_07_22_0009@{ i } A x z )
        ( q : A_2024_07_22_0009@{ i } A z y )
    : A_2024_07_22_0009@{ i } A x y
    :=
        let
            a : A_2024_07_22_0009@{ i } A z y -> A_2024_07_22_0009@{ i } A x y
                :=
                    match
                        p
                    in
                        A_2024_07_22_0009 _ x_ z_
                    return
                        A_2024_07_22_0009@{ i } A z_ y -> A_2024_07_22_0009@{ i } A x_ y
                    with
                        A_2024_07_22_0010 _ w
                            =>
                                let
                                    a ( q_ : A_2024_07_22_0009@{ i } A w y ) : A_2024_07_22_0009@{ i } A w y
                                        :=
                                            match
                                                q_
                                            in
                                                A_2024_07_22_0009 _ w_ y_
                                            return
                                                A_2024_07_22_0009@{ i } A w_ y_
                                            with
                                                A_2024_07_22_0010 _ v => A_2024_07_22_0010@{ i } A v
                                            end
                                in
                                    a
                    end
        in
            a q
.

(** 反転です。 *)

Definition A_2024_07_22_0012@{ i | } ( A : Type@{ i } ) ( x : A ) ( y : A ) ( p : A_2024_07_22_0009@{ i } A y x )
    : A_2024_07_22_0009@{ i } A x y
    :=
        match
            p
        in
            A_2024_07_22_0009 _ y_ x_
        return
            A_2024_07_22_0009@{ i } A x_ y_
        with
            A_2024_07_22_0010 _ z => A_2024_07_22_0010@{ i } A z
        end
.

(** 関数を道へ適用します。 *)

Definition A_2024_07_22_0013@{ i | }
        ( A : Type@{ i } )
        ( B : Type@{ i } )
        ( f : B -> A )
        ( x : B )
        ( y : B )
        ( p : A_2024_07_22_0009@{ i } B x y )
    : A_2024_07_22_0009@{ i } A ( f x ) ( f y )
    :=
        match
            p
        in
            A_2024_07_22_0009 _ x_ y_
        return
            A_2024_07_22_0009@{ i } A ( f x_ ) ( f y_ )
        with
            A_2024_07_22_0010 _ z => A_2024_07_22_0010@{ i } A ( f z )
        end
.

(** 道に沿って輸送します。「輸送する」は "transport" の訳語です。 *)

Definition A_2024_07_22_0014@{ i | }
        ( A : Type@{ i } )
        ( B : A -> Type@{ i } )
        ( x : A )
        ( y : A )
        ( p : A_2024_07_22_0009@{ i } A y x )
        ( u : B y )
    : B x
    :=
        let
            a : B y -> B x
                :=
                    match
                        p
                    in
                        A_2024_07_22_0009 _ y_ x_
                    return
                        B y_ -> B x_
                    with
                        A_2024_07_22_0010 _ z
                            =>
                                let
                                    a ( u_ : B z ) : B z := u_
                                in
                                    a
                    end
        in
            a u
.

(** 依存関数を道に適用します。 *)

Definition A_2024_07_22_0015@{ i | }
        ( A : Type@{ i } )
        ( B : A -> Type@{ i } )
        ( f : forall x : A , B x )
        ( x : A )
        ( y : A )
        ( p : A_2024_07_22_0009@{ i } A x y )
    : A_2024_07_22_0009@{ i } ( B y ) ( A_2024_07_22_0014@{ i } A B y x p ( f x ) ) ( f y )
    :=
        match
            p
        as
            p_
        in
            A_2024_07_22_0009 _ x_ y_
        return
            A_2024_07_22_0009@{ i } ( B y_ ) ( A_2024_07_22_0014@{ i } A B y_ x_ p_ ( f x_ ) ) ( f y_ )
        with
            A_2024_07_22_0010 _ z => A_2024_07_22_0010@{ i } ( B z ) ( f z )
        end
.

(** 恒等道と恒等道を結合した道は恒等道に等しくなります。 *)

Definition A_2024_07_22_0027@{ i | } ( A : Type@{ i } ) ( x : A )
    :
        A_2024_07_22_0009@{ i }
            ( A_2024_07_22_0009@{ i } A x x )
            ( A_2024_07_22_0011@{ i } A x x x ( A_2024_07_22_0010@{ i } A x ) ( A_2024_07_22_0010@{ i } A x ) )
            ( A_2024_07_22_0010@{ i } A x )
    := A_2024_07_22_0010@{ i } ( A_2024_07_22_0009@{ i } A x x ) ( A_2024_07_22_0010@{ i } A x )
.

(** 結合演算は結合法則を満たします。 *)

Definition A_2024_07_22_0032@{ i | }
        ( A : Type@{ i } )
        ( x : A )
        ( y : A )
        ( z : A )
        ( w : A )
        ( p : A_2024_07_22_0009@{ i } A x z )
        ( q : A_2024_07_22_0009@{ i } A z w )
        ( r : A_2024_07_22_0009@{ i } A w y )
    :
        A_2024_07_22_0009@{ i }
            ( A_2024_07_22_0009@{ i } A x y )
            ( A_2024_07_22_0011@{ i } A x y w ( A_2024_07_22_0011@{ i } A x w z p q ) r )
            ( A_2024_07_22_0011@{ i } A x y z p ( A_2024_07_22_0011@{ i } A z y w q r ) )
.
Proof .
    refine
        (
            let
                a
                    :
                        forall q_ : A_2024_07_22_0009@{ i } A z w ,
                        forall r_ : A_2024_07_22_0009@{ i } A w y ,
                        A_2024_07_22_0009@{ i }
                            ( A_2024_07_22_0009@{ i } A x y )
                            ( A_2024_07_22_0011@{ i } A x y w ( A_2024_07_22_0011@{ i } A x w z p q_ ) r_ )
                            ( A_2024_07_22_0011@{ i } A x y z p ( A_2024_07_22_0011@{ i } A z y w q_ r_ ) )
                    := _
            in
                a q r
        )
    .
    refine
        (
            match
                p
            as
                p_
            in
                A_2024_07_22_0009 _ x_ z_
            return
                forall q_ : A_2024_07_22_0009@{ i } A z_ w ,
                forall r_ : A_2024_07_22_0009@{ i } A w y ,
                A_2024_07_22_0009@{ i }
                    ( A_2024_07_22_0009@{ i } A x_ y )
                    ( A_2024_07_22_0011@{ i } A x_ y w ( A_2024_07_22_0011@{ i } A x_ w z_ p_ q_ ) r_ )
                    ( A_2024_07_22_0011@{ i } A x_ y z_ p_ ( A_2024_07_22_0011@{ i } A z_ y w q_ r_ ) )
            with
                A_2024_07_22_0010 _ v => _
            end
        )
    .
    refine
        (
            let
                a ( q_ : A_2024_07_22_0009@{ i } A v w )
                    :
                        forall r_ : A_2024_07_22_0009@{ i } A w y ,
                        A_2024_07_22_0009@{ i }
                            ( A_2024_07_22_0009@{ i } A v y )
                            (
                                A_2024_07_22_0011@{ i }
                                    A
                                    v
                                    y
                                    w
                                    ( A_2024_07_22_0011@{ i } A v w v ( A_2024_07_22_0010@{ i } A v ) q_ )
                                    r_
                            )
                            (
                                A_2024_07_22_0011@{ i }
                                    A
                                    v
                                    y
                                    v
                                    ( A_2024_07_22_0010@{ i } A v ) ( A_2024_07_22_0011@{ i } A v y w q_ r_ )
                            )
                    := _
            in
                a
        )
    .
    refine
        (
            match
                q_
            as
                q__
            in
                A_2024_07_22_0009 _ v_ w_
            return
                forall r_ : A_2024_07_22_0009@{ i } A w_ y ,
                A_2024_07_22_0009@{ i }
                    ( A_2024_07_22_0009@{ i } A v_ y )
                    (
                        A_2024_07_22_0011@{ i }
                            A
                            v_
                            y
                            w_
                            ( A_2024_07_22_0011@{ i } A v_ w_ v_ ( A_2024_07_22_0010@{ i } A v_ ) q__ )
                            r_
                    )
                    (
                        A_2024_07_22_0011@{ i }
                            A
                            v_
                            y
                            v_
                            ( A_2024_07_22_0010@{ i } A v_ )
                            ( A_2024_07_22_0011@{ i } A v_ y w_ q__ r_ )
                    )
            with
                A_2024_07_22_0010 _ u => _
            end
        )
    .
    refine
        (
            let
                a ( r_ : A_2024_07_22_0009@{ i } A u y )
                    :
                        A_2024_07_22_0009@{ i }
                            ( A_2024_07_22_0009@{ i } A u y )
                            (
                                A_2024_07_22_0011@{ i }
                                    A
                                    u
                                    y
                                    u
                                    (
                                        A_2024_07_22_0011@{ i }
                                            A
                                            u
                                            u
                                            u
                                            ( A_2024_07_22_0010@{ i } A u )
                                            ( A_2024_07_22_0010@{ i } A u )
                                    )
                                    r_
                            )
                            (
                                A_2024_07_22_0011@{ i }
                                    A
                                    u
                                    y
                                    u
                                    ( A_2024_07_22_0010@{ i } A u )
                                    (
                                        A_2024_07_22_0011@{ i }
                                            A
                                            u
                                            y
                                            u
                                            ( A_2024_07_22_0010@{ i } A u )
                                            r_
                                    )
                            )
                    := _
            in
                a
        )
    .
    refine
        (
            match
                r_
            as
                r__
            in
                A_2024_07_22_0009 _ u_ y_
            return
                A_2024_07_22_0009@{ i }
                    ( A_2024_07_22_0009@{ i } A u_ y_ )
                    (
                        A_2024_07_22_0011@{ i }
                            A
                            u_
                            y_
                            u_
                            (
                                A_2024_07_22_0011@{ i }
                                    A
                                    u_
                                    u_
                                    u_
                                    ( A_2024_07_22_0010@{ i } A u_ )
                                    ( A_2024_07_22_0010@{ i } A u_ )
                            )
                            r__
                    )
                    (
                        A_2024_07_22_0011@{ i }
                            A
                            u_
                            y_
                            u_
                            ( A_2024_07_22_0010@{ i } A u_ )
                            (
                                A_2024_07_22_0011@{ i }
                                    A
                                    u_
                                    y_
                                    u_
                                    ( A_2024_07_22_0010@{ i } A u_ )
                                    r__
                            )
                    )
            with
                A_2024_07_22_0010 _ t => _
            end
        )
    .
    exact ( A_2024_07_22_0010@{ i } ( A_2024_07_22_0009@{ i } A t t ) ( A_2024_07_22_0010@{ i } A t ) ) .
Defined .

(** 恒等道と [p] を結合した道は [p] に等しくなります。 *)

Definition A_2024_07_25_0000@{ i | } ( A : Type@{ i } ) ( x : A ) ( y : A ) ( p : A_2024_07_22_0009@{ i } A x y )
    :
        A_2024_07_22_0009@{ i }
            ( A_2024_07_22_0009@{ i } A x y )
            ( A_2024_07_22_0011@{ i } A x y x ( A_2024_07_22_0010@{ i } A x ) p )
            p
    :=
        match
            p
        as
            p_
        in
            A_2024_07_22_0009 _ x_ y_
        return
            A_2024_07_22_0009@{ i }
                ( A_2024_07_22_0009@{ i } A x_ y_ )
                ( A_2024_07_22_0011@{ i } A x_ y_ x_ ( A_2024_07_22_0010@{ i } A x_ ) p_ )
                p_
        with
            A_2024_07_22_0010 _ z => A_2024_07_22_0010@{ i } ( A_2024_07_22_0009@{ i } A z z ) ( A_2024_07_22_0010@{ i } A z )
        end
.

(** [p] と恒等道を結合した道は [p] に等しくなります。 *)

Definition A_2024_07_25_0001@{ i | } ( A : Type@{ i } ) ( x : A ) ( y : A ) ( p : A_2024_07_22_0009@{ i } A x y )
    :
        A_2024_07_22_0009@{ i }
            ( A_2024_07_22_0009@{ i } A x y )
            ( A_2024_07_22_0011@{ i } A x y y p ( A_2024_07_22_0010@{ i } A y ) )
            p
    :=
        match
            p
        as
            p_
        in
            A_2024_07_22_0009 _ x_ y_
        return
            A_2024_07_22_0009@{ i }
                ( A_2024_07_22_0009@{ i } A x_ y_ )
                ( A_2024_07_22_0011@{ i } A x_ y_ y_ p_ ( A_2024_07_22_0010@{ i } A y_ ) )
                p_
        with
            A_2024_07_22_0010 _ z => A_2024_07_22_0010@{ i } ( A_2024_07_22_0009@{ i } A z z ) ( A_2024_07_22_0010@{ i } A z )
        end
.

(** [p] と [p] を反転した道を結合した道は恒等道に等しくなります。 *)

Definition A_2024_07_25_0002@{ i | } ( A : Type@{ i } ) ( x : A ) ( y : A ) ( p : A_2024_07_22_0009@{ i } A x y )
    :
        A_2024_07_22_0009@{ i }
            ( A_2024_07_22_0009@{ i } A x x )
            ( A_2024_07_22_0011@{ i } A x x y p ( A_2024_07_22_0012@{ i } A y x p ) )
            ( A_2024_07_22_0010@{ i } A x )
    :=
        match
            p
        as
            p_
        in
            A_2024_07_22_0009 _ x_ y_
        return
            A_2024_07_22_0009@{ i }
                ( A_2024_07_22_0009@{ i } A x_ x_ )
                ( A_2024_07_22_0011@{ i } A x_ x_ y_ p_ ( A_2024_07_22_0012@{ i } A y_ x_ p_ ) )
                ( A_2024_07_22_0010@{ i } A x_ )
        with
            A_2024_07_22_0010 _ z => A_2024_07_22_0010@{ i } ( A_2024_07_22_0009@{ i } A z z ) ( A_2024_07_22_0010 A z )
        end
.

(** [p] を反転した道 と [p] を結合した道は恒等道に等しくなります。 *)

Definition A_2024_07_25_0003@{ i | } ( A : Type@{ i } ) ( x : A ) ( y : A ) ( p : A_2024_07_22_0009@{ i } A y x )
    :
        A_2024_07_22_0009@{ i }
            ( A_2024_07_22_0009@{ i } A x x )
            ( A_2024_07_22_0011@{ i } A x x y ( A_2024_07_22_0012@{ i } A x y p ) p )
            ( A_2024_07_22_0010@{ i } A x )
    :=
        match
            p
        as
            p_
        in
            A_2024_07_22_0009 _ y_ x_
        return
            A_2024_07_22_0009@{ i }
                ( A_2024_07_22_0009@{ i } A x_ x_ )
                ( A_2024_07_22_0011@{ i } A x_ x_ y_ ( A_2024_07_22_0012@{ i } A x_ y_ p_ ) p_ )
                ( A_2024_07_22_0010@{ i } A x_ )
        with
            A_2024_07_22_0010 _ z => A_2024_07_22_0010@{ i } ( A_2024_07_22_0009@{ i } A z z ) ( A_2024_07_22_0010@{ i } A z )
        end
.

(** 恒等道を反転した道は恒等道に等しくなります。 *)

Definition A_2024_07_22_0028@{ i | } ( A : Type@{ i } ) ( x : A )
    :
        A_2024_07_22_0009@{ i }
            ( A_2024_07_22_0009@{ i } A x x )
            ( A_2024_07_22_0012@{ i } A x x ( A_2024_07_22_0010@{ i } A x ) )
            ( A_2024_07_22_0010@{ i } A x )
    := A_2024_07_22_0010@{ i } ( A_2024_07_22_0009@{ i } A x x ) ( A_2024_07_22_0010@{ i } A x )
.

(** [p] と [q] を結合した道を反転した道は [q] を反転した道と [p] を反転した道に等しくなります。 *)

Definition A_2024_07_26_0001@{ i | }
        ( A : Type@{ i } )
        ( x : A )
        ( y : A )
        ( z : A )
        ( p : A_2024_07_22_0009@{ i } A z x )
        ( q : A_2024_07_22_0009@{ i } A y z )
    :
        A_2024_07_22_0009@{ i }
            ( A_2024_07_22_0009@{ i } A x y )
            ( A_2024_07_22_0012@{ i } A x y ( A_2024_07_22_0011@{ i } A y x z q p ) )
            ( A_2024_07_22_0011@{ i } A x y z ( A_2024_07_22_0012@{ i } A x z p ) ( A_2024_07_22_0012@{ i } A z y q ) )
.
Proof .
    refine
        (
            let
                a
                    :
                        forall q_ : A_2024_07_22_0009@{ i } A y z ,
                        A_2024_07_22_0009@{ i }
                            ( A_2024_07_22_0009@{ i } A x y )
                            ( A_2024_07_22_0012@{ i } A x y ( A_2024_07_22_0011@{ i } A y x z q_ p ) )
                            (
                                A_2024_07_22_0011@{ i }
                                    A
                                    x
                                    y
                                    z
                                    ( A_2024_07_22_0012@{ i } A x z p )
                                    ( A_2024_07_22_0012@{ i } A z y q_ )
                            )
                    := _
            in
                a q
        )
    .
    refine
        (
            match
                p
            as
                p_
            in
                A_2024_07_22_0009 _ z_ x_
            return
                forall q_ : A_2024_07_22_0009@{ i } A y z_ ,
                A_2024_07_22_0009@{ i }
                    ( A_2024_07_22_0009@{ i } A x_ y )
                    ( A_2024_07_22_0012@{ i } A x_ y ( A_2024_07_22_0011@{ i } A y x_ z_ q_ p_ ) )
                    ( A_2024_07_22_0011@{ i } A x_ y z_ ( A_2024_07_22_0012@{ i } A x_ z_ p_ ) ( A_2024_07_22_0012@{ i } A z_ y q_ ) )
            with
                A_2024_07_22_0010 _ w => _
            end
        )
    .
    refine
        (
            let
                a ( q_ : A_2024_07_22_0009@{ i } A y w )
                    :
                        A_2024_07_22_0009@{ i }
                            ( A_2024_07_22_0009@{ i } A w y )
                            (
                                A_2024_07_22_0012@{ i } A w y ( A_2024_07_22_0011@{ i } A y w w q_ ( A_2024_07_22_0010@{ i } A w ) )
                            )
                            (
                                A_2024_07_22_0011@{ i }
                                    A
                                    w
                                    y
                                    w
                                    ( A_2024_07_22_0012@{ i } A w w ( A_2024_07_22_0010@{ i } A w ) )
                                    ( A_2024_07_22_0012@{ i } A w y q_ )
                            )
                    := _
            in
                a
        )
    .
    refine
        (
            match
                q_
            as
                q__
            in
                A_2024_07_22_0009 _ y_ w_
            return
                A_2024_07_22_0009@{ i }
                    ( A_2024_07_22_0009@{ i } A w_ y_ )
                    (
                        A_2024_07_22_0012@{ i } A w_ y_ ( A_2024_07_22_0011@{ i } A y_ w_ w_ q__ ( A_2024_07_22_0010@{ i } A w_ ) )
                    )
                    (
                        A_2024_07_22_0011@{ i }
                            A
                            w_
                            y_
                            w_
                            ( A_2024_07_22_0012@{ i } A w_ w_ ( A_2024_07_22_0010@{ i } A w_ ) )
                            ( A_2024_07_22_0012@{ i } A w_ y_ q__ )
                    )
            with
                A_2024_07_22_0010 _ v => _
            end
        )
    .
    exact ( A_2024_07_22_0010@{ i } ( A_2024_07_22_0009@{ i } A v v ) ( A_2024_07_22_0010@{ i } A v ) ) .
Defined .

(** [p] を反転した道を反転した道は [p] に等しくなります。 *)

Definition A_2024_07_26_0002@{ i | } ( A : Type@{ i } ) ( x : A ) ( y : A ) ( p : A_2024_07_22_0009@{ i } A x y )
    :
        A_2024_07_22_0009@{ i }
            ( A_2024_07_22_0009@{ i } A x y )
            ( A_2024_07_22_0012@{ i } A x y ( A_2024_07_22_0012@{ i } A y x p ) )
            p
    :=
        match
            p
        as
            p_
        in
            A_2024_07_22_0009 _ x_ y_
        return
            A_2024_07_22_0009@{ i }
                ( A_2024_07_22_0009@{ i } A x_ y_ )
                ( A_2024_07_22_0012@{ i } A x_ y_ ( A_2024_07_22_0012@{ i } A y_ x_ p_ ) )
                p_
        with
            A_2024_07_22_0010 _ z => A_2024_07_22_0010@{ i } ( A_2024_07_22_0009@{ i } A z z ) ( A_2024_07_22_0010@{ i } A z )
        end
.

(** 恒等関数を [p] に適用した道は [p] に等しくなります。 *)

Definition A_2024_07_25_0004@{ i | } ( A : Type@{ i } ) ( x : A ) ( y : A ) ( p : A_2024_07_22_0009@{ i } A x y )
    :
        A_2024_07_22_0009@{ i }
            ( A_2024_07_22_0009@{ i } A x y )
            ( A_2024_07_22_0013@{ i } A A ( 恒等関数@{ i } A ) x y p )
            p
    :=
        match
            p
        as
            p_
        in
            A_2024_07_22_0009 _ x_ y_
        return
            A_2024_07_22_0009@{ i }
                ( A_2024_07_22_0009@{ i } A x_ y_ )
                ( A_2024_07_22_0013@{ i } A A ( 恒等関数@{ i } A ) x_ y_ p_ )
                p_
        with
            A_2024_07_22_0010 _ z => A_2024_07_22_0010@{ i } ( A_2024_07_22_0009@{ i } A z z ) ( A_2024_07_22_0010@{ i } A z )
        end
.

(** [f] と [g] を合成した関数を [p] へ適用した道は [p] へ [g] を適用した道へ [f] を適用した道に等しくなります。 *)

Definition A_2024_07_25_0005@{ i | }
        ( A : Type@{ i } )
        ( B : Type@{ i } )
        ( C : Type@{ i } )
        ( f : B -> A )
        ( g : C -> B )
        ( x : C )
        ( y : C )
        ( p : A_2024_07_22_0009@{ i } C x y )
    :
        A_2024_07_22_0009@{ i }
            ( A_2024_07_22_0009@{ i } A ( f ( g x ) ) ( f ( g y ) ) )
            ( A_2024_07_22_0013@{ i } A C ( 合成する@{ i } A B C f g ) x y p )
            ( A_2024_07_22_0013@{ i } A B f ( g x ) ( g y ) ( A_2024_07_22_0013@{ i } B C g x y p ) )
    :=
        match
            p
        as
            p_
        in
            A_2024_07_22_0009 _ x_ y_
        return
            A_2024_07_22_0009@{ i }
                ( A_2024_07_22_0009@{ i } A ( f ( g x_ ) ) ( f ( g y_ ) ) )
                ( A_2024_07_22_0013@{ i } A C ( 合成する@{ i } A B C f g ) x_ y_ p_ )
                ( A_2024_07_22_0013@{ i } A B f ( g x_ ) ( g y_ ) ( A_2024_07_22_0013@{ i } B C g x_ y_ p_ ) )
        with
            A_2024_07_22_0010 _ z
                =>
                    A_2024_07_22_0010@{ i }
                        ( A_2024_07_22_0009@{ i } A ( f ( g z ) ) ( f ( g z ) ) )
                        ( A_2024_07_22_0010@{ i } A ( f ( g z ) ) )
        end
.

(** 恒等道へ関数を適用した道は恒等道に等しくなります。 *)

Definition A_2024_07_22_0029@{ i | } ( A : Type@{ i } ) ( B : Type@{ i } ) ( f : B -> A ) ( x : B )
    :
        A_2024_07_22_0009@{ i }
            ( A_2024_07_22_0009@{ i } A ( f x ) ( f x ) )
            ( A_2024_07_22_0013@{ i } A B f x x ( A_2024_07_22_0010@{ i } B x ) )
            ( A_2024_07_22_0010@{ i } A ( f x ) )
    := A_2024_07_22_0010@{ i } ( A_2024_07_22_0009@{ i } A ( f x ) ( f x ) ) ( A_2024_07_22_0010@{ i } A ( f x ) )
.

(** [p] と [q] を結合した道に [f] を適用した道は [p] に [f] を適用した道と [q] に [f] を適用した道を結合した道に等しくなります。 *)

Definition A_2024_07_25_0006@{ i | }
        ( A : Type@{ i } )
        ( B : Type@{ i } )
        ( f : B -> A )
        ( x : B )
        ( y : B )
        ( z : B )
        ( p : A_2024_07_22_0009@{ i } B x z )
        ( q : A_2024_07_22_0009@{ i } B z y )
    :
        A_2024_07_22_0009@{ i }
            ( A_2024_07_22_0009@{ i } A ( f x ) ( f y ) )
            ( A_2024_07_22_0013@{ i } A B f x y ( A_2024_07_22_0011@{ i } B x y z p q ) )
            (
                A_2024_07_22_0011@{ i }
                    A
                    ( f x )
                    ( f y )
                    ( f z )
                    ( A_2024_07_22_0013@{ i } A B f x z p )
                    ( A_2024_07_22_0013@{ i } A B f z y q )
            )
.
Proof .
    refine
        (
            let
                a
                    :
                        forall q_ : A_2024_07_22_0009@{ i } B z y ,
                        A_2024_07_22_0009@{ i }
                            ( A_2024_07_22_0009@{ i } A ( f x ) ( f y ) )
                            (
                                A_2024_07_22_0013@{ i } A B f x y ( A_2024_07_22_0011@{ i } B x y z p q_ )
                            )
                            (
                                A_2024_07_22_0011@{ i }
                                    A
                                    ( f x )
                                    ( f y )
                                    ( f z )
                                    ( A_2024_07_22_0013@{ i } A B f x z p )
                                    ( A_2024_07_22_0013@{ i } A B f z y q_ )
                            )
                    := _
            in
                a q
        )
    .
    refine
        (
            match
                p
            as
                p_
            in
                A_2024_07_22_0009 _ x_ z_
            return
                forall q_ : A_2024_07_22_0009@{ i } B z_ y ,
                A_2024_07_22_0009@{ i }
                    ( A_2024_07_22_0009@{ i } A ( f x_ ) ( f y ) )
                    (
                        A_2024_07_22_0013@{ i } A B f x_ y ( A_2024_07_22_0011@{ i } B x_ y z_ p_ q_ )
                    )
                    (
                        A_2024_07_22_0011@{ i }
                            A
                            ( f x_ )
                            ( f y )
                            ( f z_ )
                            ( A_2024_07_22_0013@{ i } A B f x_ z_ p_ )
                            ( A_2024_07_22_0013@{ i } A B f z_ y q_ )
                    )
            with
                A_2024_07_22_0010 _ w => _
            end
        )
    .
    refine
        (
            let
                a ( q_ : A_2024_07_22_0009@{ i } B w y )
                    :
                        A_2024_07_22_0009@{ i }
                            ( A_2024_07_22_0009@{ i } A ( f w ) ( f y ) )
                            (
                                A_2024_07_22_0013@{ i }
                                    A
                                    B
                                    f
                                    w
                                    y
                                    ( A_2024_07_22_0011@{ i } B w y w ( A_2024_07_22_0010@{ i } B w ) q_ )
                            )
                            (
                                A_2024_07_22_0011@{ i }
                                    A
                                    ( f w )
                                    ( f y )
                                    ( f w )
                                    ( A_2024_07_22_0013@{ i } A B f w w ( A_2024_07_22_0010@{ i } B w ) )
                                    ( A_2024_07_22_0013@{ i } A B f w y q_ )
                            )
                    := _
            in
                a
        )
    .
    refine
        (
            match
                q_
            as
                q__
            in
                A_2024_07_22_0009 _ w_ y_
            return
                A_2024_07_22_0009@{ i }
                    ( A_2024_07_22_0009@{ i } A ( f w_ ) ( f y_ ) )
                    ( A_2024_07_22_0013@{ i } A B f w_ y_ ( A_2024_07_22_0011@{ i } B w_ y_ w_ ( A_2024_07_22_0010@{ i } B w_ ) q__ ) )
                    (
                        A_2024_07_22_0011@{ i }
                            A
                            ( f w_ )
                            ( f y_ )
                            ( f w_ )
                            ( A_2024_07_22_0013@{ i } A B f w_ w_ ( A_2024_07_22_0010@{ i } B w_ ) )
                            ( A_2024_07_22_0013@{ i } A B f w_ y_ q__ )
                    )
            with
                A_2024_07_22_0010 _ v => _
            end
        )
    .
    exact ( A_2024_07_22_0010@{ i } ( A_2024_07_22_0009@{ i } A ( f v ) ( f v ) ) ( A_2024_07_22_0010@{ i } A ( f v ) ) ) .
Defined .

(** [p] を反転した道に [f] を適用した道は [p] に [f] を適用した道を反転した道に等しくなります。 *)

Definition A_2024_07_26_0000@{ i | }
        ( A : Type@{ i } )
        ( B : Type@{ i } )
        ( f : B -> A )
        ( x : B )
        ( y : B )
        ( p : A_2024_07_22_0009@{ i } B y x )
    :
        A_2024_07_22_0009@{ i }
            ( A_2024_07_22_0009@{ i } A ( f x ) ( f y ) )
            ( A_2024_07_22_0013@{ i } A B f x y ( A_2024_07_22_0012@{ i } B x y p ) )
            ( A_2024_07_22_0012@{ i } A ( f x ) ( f y ) ( A_2024_07_22_0013@{ i } A B f y x p ) )
    :=
        match
            p
        as
            p_
        in
            A_2024_07_22_0009 _ y_ x_
        return
            A_2024_07_22_0009@{ i }
                ( A_2024_07_22_0009@{ i } A ( f x_ ) ( f y_ ) )
                ( A_2024_07_22_0013@{ i } A B f x_ y_ ( A_2024_07_22_0012@{ i } B x_ y_ p_ ) )
                ( A_2024_07_22_0012@{ i } A ( f x_ ) ( f y_ ) ( A_2024_07_22_0013@{ i } A B f y_ x_ p_ ) )
        with
            A_2024_07_22_0010 _ z
                => A_2024_07_22_0010@{ i } ( A_2024_07_22_0009@{ i } A ( f z ) ( f z ) ) ( A_2024_07_22_0010@{ i } A ( f z ) )
        end
.

(** 恒等道に沿って [u] を輸送した値は [u] に等しくなります。 *)

Definition A_2024_07_22_0030@{ i | } ( A : Type@{ i } ) ( B : A -> Type@{ i } ) ( x : A ) ( u : B x )
    :
        A_2024_07_22_0009@{ i }
            ( B x )
            ( A_2024_07_22_0014@{ i } A B x x ( A_2024_07_22_0010@{ i } A x ) u )
            u
    := A_2024_07_22_0010@{ i } ( B x ) u
.

(** [p] と [q] を結合した道に沿って [u] を輸送した値は [u] を [p] に沿って輸送した値を [q] に沿って輸送した値に等しくなります。 *)

Definition A_2024_07_26_0003@{ i | }
        ( A : Type@{ i } )
        ( B : A -> Type@{ i } )
        ( x : A )
        ( y : A )
        ( z : A )
        ( p : A_2024_07_22_0009@{ i } A y x )
        ( q : A_2024_07_22_0009@{ i } A z y )
        ( u : B z )
    :
        A_2024_07_22_0009@{ i }
            ( B x )
            ( A_2024_07_22_0014@{ i } A B x z ( A_2024_07_22_0011@{ i } A z x y q p ) u )
            ( A_2024_07_22_0014@{ i } A B x y p ( A_2024_07_22_0014@{ i } A B y z q u ) )
.
Proof .
    refine
        (
            let
                a
                    :
                        forall q_ : A_2024_07_22_0009@{ i } A z y ,
                        forall u_ : B z ,
                        A_2024_07_22_0009@{ i }
                            ( B x )
                            ( A_2024_07_22_0014@{ i } A B x z ( A_2024_07_22_0011@{ i } A z x y q_ p ) u_ )
                            ( A_2024_07_22_0014@{ i } A B x y p ( A_2024_07_22_0014@{ i } A B y z q_ u_ ) )
                    := _
            in
                a q u
        )
    .
    refine
        (
            match
                p
            as
                p_
            in
                A_2024_07_22_0009 _ y_ x_
            return
                forall q_ : A_2024_07_22_0009@{ i } A z y_ ,
                forall u_ : B z ,
                A_2024_07_22_0009@{ i }
                    ( B x_ )
                    ( A_2024_07_22_0014@{ i } A B x_ z ( A_2024_07_22_0011@{ i } A z x_ y_ q_ p_ ) u_ )
                    ( A_2024_07_22_0014@{ i } A B x_ y_ p_ ( A_2024_07_22_0014@{ i } A B y_ z q_ u_ ) )
            with
                A_2024_07_22_0010 _ w => _
            end
        )
    .
    refine
        (
            let
                a ( q_ : A_2024_07_22_0009@{ i } A z w )
                    :
                        forall u_ : B z ,
                        A_2024_07_22_0009@{ i }
                            ( B w )
                            (
                                A_2024_07_22_0014@{ i }
                                    A
                                    B
                                    w
                                    z
                                    ( A_2024_07_22_0011@{ i } A z w w q_ ( A_2024_07_22_0010@{ i } A w ) )
                                    u_
                            )
                            (
                                A_2024_07_22_0014@{ i }
                                    A
                                    B
                                    w
                                    w
                                    ( A_2024_07_22_0010@{ i } A w )
                                    ( A_2024_07_22_0014@{ i } A B w z q_ u_ )
                            )
                    := _
            in
                a
        )
    .
    refine
        (
            match
                q_
            as
                q__
            in
                A_2024_07_22_0009 _ z_ w_
            return
                forall u_ : B z_ ,
                A_2024_07_22_0009@{ i }
                    ( B w_ )
                    (
                        A_2024_07_22_0014@{ i }
                            A
                            B
                            w_
                            z_
                            ( A_2024_07_22_0011@{ i } A z_ w_ w_ q__ ( A_2024_07_22_0010@{ i } A w_ ) )
                            u_
                    )
                    ( A_2024_07_22_0014@{ i } A B w_ w_ ( A_2024_07_22_0010@{ i } A w_ ) ( A_2024_07_22_0014@{ i } A B w_ z_ q__ u_ ) )
            with
                A_2024_07_22_0010 _ v => _
            end
        )
    .
    refine
        (
            let
                a ( u_ : B v )
                    :
                        A_2024_07_22_0009@{ i }
                            ( B v )
                            (
                                A_2024_07_22_0014@{ i }
                                    A
                                    B
                                    v
                                    v
                                    ( A_2024_07_22_0011@{ i } A v v v ( A_2024_07_22_0010@{ i } A v ) ( A_2024_07_22_0010@{ i } A v ) )
                                    u_
                            )
                            (
                                A_2024_07_22_0014@{ i }
                                    A
                                    B
                                    v
                                    v
                                    ( A_2024_07_22_0010@{ i } A v )
                                    (
                                        A_2024_07_22_0014@{ i }
                                            A
                                            B
                                            v
                                            v
                                            ( A_2024_07_22_0010@{ i } A v )
                                            u_
                                    )
                            )
                    := _
            in
                a
        )
    .
    exact ( A_2024_07_22_0010@{ i } ( B v ) u_ ) .
Defined .

(** 恒等道へ依存関数を適用した道は恒等道に等しくまります。 *)

Definition A_2024_07_22_0031@{ i | } ( A : Type@{ i } ) ( B : A -> Type@{ i } ) ( f : forall x : A , B x ) ( x : A )
    :
        A_2024_07_22_0009@{ i }
            ( A_2024_07_22_0009@{ i } ( B x ) ( f x ) ( f x ) )
            ( A_2024_07_22_0015@{ i } A B f x x ( A_2024_07_22_0010@{ i } A x ) )
            ( A_2024_07_22_0010@{ i } ( B x ) ( f x ) )
    := A_2024_07_22_0010@{ i } ( A_2024_07_22_0009@{ i } ( B x ) ( f x ) ( f x ) ) ( A_2024_07_22_0010@{ i } ( B x ) ( f x ) )
.

(** 一方の端点を自由にした道を定義します。「片端自由道」と呼びます。 *)

Inductive A_2024_07_26_0004@{ i | } ( A : Type@{ i } ) ( x : A ) : Type@{ i }
    := A_2024_07_26_0005 : forall y : A , A_2024_07_22_0009@{ i } A x y -> A_2024_07_26_0004 A x
.

(** 片端自由道を取り、その端点を得ます。 *)

Definition A_2024_07_26_0006@{ i | } ( A : Type@{ i } ) ( x : A ) ( p : A_2024_07_26_0004@{ i } A x ) : A
    := match p with A_2024_07_26_0005 _ _ y p_中身 => y end
.

(** 片端自由道を取り、そこから普通の道を得ます。 *)

Definition A_2024_07_26_0007@{ i | } ( A : Type@{ i } ) ( x : A ) ( p : A_2024_07_26_0004@{ i } A x )
    : A_2024_07_22_0009@{ i } A x ( A_2024_07_26_0006@{ i } A x p )
    := match p with A_2024_07_26_0005 _ _ y p_中身 => p_中身 end
.

(** 片端自由道の恒等道です。 *)

Definition A_2024_07_26_0008@{ i | } ( A : Type@{ i } ) ( x : A ) : A_2024_07_26_0004@{ i } A x
    := A_2024_07_26_0005@{ i } A x x ( A_2024_07_22_0010@{ i } A x )
.

(** 片端自由道は常に恒等道と等しくなります。 *)

Definition A_2024_07_26_0009@{ i | } ( A : Type@{ i } ) ( x : A ) ( p : A_2024_07_26_0004@{ i } A x )
    : A_2024_07_22_0009@{ i } ( A_2024_07_26_0004@{ i } A x ) ( A_2024_07_26_0008@{ i } A x ) p
.
Proof .
    refine
        (
            match
                p
            as
                p_
            return
                A_2024_07_22_0009@{ i } ( A_2024_07_26_0004@{ i } A x ) ( A_2024_07_26_0008@{ i } A x ) p_
            with
                A_2024_07_26_0005 _ _ y p_中身 => _
            end
        )
    .
    refine
        (
            match
                p_中身
            as
                p_中身_
            in
                A_2024_07_22_0009 _ x_ y_
            return
                A_2024_07_22_0009@{ i }
                    ( A_2024_07_26_0004@{ i } A x_ )
                    ( A_2024_07_26_0008@{ i } A x_ )
                    ( A_2024_07_26_0005@{ i } A x_ y_ p_中身_ )
            with
                A_2024_07_22_0010 _ z => _
            end
        )
    .
    exact ( A_2024_07_22_0010@{ i } ( A_2024_07_26_0004@{ i } A z ) ( A_2024_07_26_0008@{ i } A z ) ) .
Defined .

(** ゼロとゼロを足した数はゼロに等しくなります。 *)

Definition A_2024_07_28_0000@{ i | }
    :
        A_2024_07_22_0009@{ i }
            A_2024_07_21_0031@{ i }
            ( A_2024_07_21_0053@{ i } A_2024_07_21_0032@{ i } A_2024_07_21_0032@{ i } )
            A_2024_07_21_0032@{ i }
    := A_2024_07_22_0010@{ i } A_2024_07_21_0031@{ i } A_2024_07_21_0032@{ i }
.

(** ゼロと [x] の後者を足した数は [x] の後者に等しくなります。 *)

Definition A_2024_07_28_0001@{ i | } ( x : A_2024_07_21_0031@{ i } )
    :
        A_2024_07_22_0009@{ i }
            A_2024_07_21_0031@{ i }
            ( A_2024_07_21_0053@{ i } A_2024_07_21_0032@{ i } ( A_2024_07_21_0033@{ i } x ) )
            ( A_2024_07_21_0033@{ i } x )
    := A_2024_07_22_0010@{ i } A_2024_07_21_0031@{ i } ( A_2024_07_21_0033@{ i } x )
.

(** [x] の後者とゼロを足した数は [x] の後者に等しくなります。 *)

Definition A_2024_07_28_0002@{ i | } ( x : A_2024_07_21_0031 )
    :
        A_2024_07_22_0009@{ i }
            A_2024_07_21_0031@{ i }
            ( A_2024_07_21_0053@{ i } ( A_2024_07_21_0033@{ i } x ) A_2024_07_21_0032@{ i } )
            ( A_2024_07_21_0033@{ i } x )
    := A_2024_07_22_0010@{ i } A_2024_07_21_0031@{ i } ( A_2024_07_21_0033@{ i } x )
.

(** [x] の後者と [y] の後者を足した数は [x] と [y] を足した数の後者の後者に等しくなります。 *)

Definition A_2024_07_28_0003@{ i | } ( x : A_2024_07_21_0031@{ i } ) ( y : A_2024_07_21_0031@{ i } )
    :
        A_2024_07_22_0009@{ i }
            A_2024_07_21_0031@{ i }
            ( A_2024_07_21_0053@{ i } ( A_2024_07_21_0033@{ i } x ) ( A_2024_07_21_0033@{ i } y ) )
            ( A_2024_07_21_0033@{ i } ( A_2024_07_21_0033@{ i } ( A_2024_07_21_0053@{ i } x y ) ) )
    :=
        A_2024_07_22_0010@{ i }
            A_2024_07_21_0031@{ i }
            ( A_2024_07_21_0033@{ i } ( A_2024_07_21_0033@{ i } ( A_2024_07_21_0053@{ i } x y ) ) )
.

(** ゼロと [x] を足した数は [x] に等しくなります。 *)

Definition A_2024_07_28_0004@{ i | } ( x : A_2024_07_21_0031@{ i } )
        :
            A_2024_07_22_0009@{ i }
                A_2024_07_21_0031@{ i }
                ( A_2024_07_21_0053@{ i } A_2024_07_21_0032@{ i } x )
                x
    :=
        match
            x
        as
            x_
        return
            A_2024_07_22_0009@{ i }
                A_2024_07_21_0031@{ i }
                    ( A_2024_07_21_0053@{ i } A_2024_07_21_0032@{ i } x_ )
                    x_
        with
            A_2024_07_21_0032 => A_2024_07_22_0010@{ i } A_2024_07_21_0031@{ i } A_2024_07_21_0032@{ i }
            |
            A_2024_07_21_0033 x_前 => A_2024_07_22_0010@{ i } A_2024_07_21_0031@{ i } ( A_2024_07_21_0033@{ i } x_前 )
        end
.

(** [x] とゼロを足した数は [x] に等しくなります。 *)

Definition A_2024_07_28_0005@{ i | } ( x : A_2024_07_21_0031@{ i } )
    :
        A_2024_07_22_0009@{ i }
            A_2024_07_21_0031@{ i }
            ( A_2024_07_21_0053@{ i } x A_2024_07_21_0032@{ i } )
            x
    :=
        match
            x
        as
            x_
        return
            A_2024_07_22_0009@{ i }
                A_2024_07_21_0031@{ i }
                ( A_2024_07_21_0053@{ i } x_ A_2024_07_21_0032@{ i } )
                x_
        with
            A_2024_07_21_0032 => A_2024_07_22_0010@{ i } A_2024_07_21_0031@{ i } A_2024_07_21_0032@{ i }
            |
            A_2024_07_21_0033 x_前 => A_2024_07_22_0010@{ i } A_2024_07_21_0031@{ i } ( A_2024_07_21_0033@{ i } x_前 )
        end
.

(** [x] の後者と [y] を足した数は [x] と [y] を足した数の後者に等しくなります。 *)

Definition A_2024_07_28_0006@{ i | } ( x : A_2024_07_21_0031@{ i } ) ( y : A_2024_07_21_0031@{ i } )
        :
            A_2024_07_22_0009@{ i }
                A_2024_07_21_0031@{ i }
                ( A_2024_07_21_0053@{ i } ( A_2024_07_21_0033@{ i } x ) y )
                ( A_2024_07_21_0033@{ i } ( A_2024_07_21_0053@{ i } x y ) )
.
Proof .
    refine
        (
            let
                fix a ( x : A_2024_07_21_0031@{ i } ) ( y : A_2024_07_21_0031@{ i } ) { struct y }
                    :
                        A_2024_07_22_0009@{ i }
                            A_2024_07_21_0031@{ i }
                            ( A_2024_07_21_0053@{ i } ( A_2024_07_21_0033@{ i } x ) y )
                            ( A_2024_07_21_0033@{ i } ( A_2024_07_21_0053@{ i } x y ) )
                    := _
            in
                a x y
        )
    .
    refine
        (
            match
                x
            as
                x_
            return
                A_2024_07_22_0009@{ i }
                    A_2024_07_21_0031@{ i }
                    ( A_2024_07_21_0053@{ i } ( A_2024_07_21_0033@{ i } x_ ) y )
                    ( A_2024_07_21_0033@{ i } ( A_2024_07_21_0053@{ i } x_ y ) )
            with
                A_2024_07_21_0032 => _
                |
                A_2024_07_21_0033 x_前 => _
            end
        )
    .
    {
        refine
            (
                match
                    y
                as
                    y_
                return
                    A_2024_07_22_0009@{ i }
                        A_2024_07_21_0031@{ i }
                        ( A_2024_07_21_0053@{ i } ( A_2024_07_21_0033@{ i } A_2024_07_21_0032@{ i } ) y_ )
                        ( A_2024_07_21_0033@{ i } ( A_2024_07_21_0053@{ i } A_2024_07_21_0032@{ i } y_ ) )
                with
                    A_2024_07_21_0032 => _
                    |
                    A_2024_07_21_0033 y_前 => _
                end
            )
        .
        {
            exact ( A_2024_07_22_0010@{ i } A_2024_07_21_0031@{ i } ( A_2024_07_21_0033@{ i } A_2024_07_21_0032@{ i } ) ) .
        }
        {
            refine
                (
                    A_2024_07_22_0011@{ i }
                        A_2024_07_21_0031@{ i }
                        (
                            A_2024_07_21_0053@{ i }
                                ( A_2024_07_21_0033@{ i } A_2024_07_21_0032@{ i } )
                                ( A_2024_07_21_0033@{ i } y_前 )
                        )
                        (
                            A_2024_07_21_0033@{ i }
                                ( A_2024_07_21_0053@{ i } A_2024_07_21_0032@{ i } ( A_2024_07_21_0033@{ i } y_前 ) )
                        )
                        (
                            A_2024_07_21_0033@{ i }
                                ( A_2024_07_21_0033@{ i } ( A_2024_07_21_0053@{ i } A_2024_07_21_0032@{ i } y_前 ) )
                        )
                        _
                        _
                )
            .
            {
                exact
                    (
                        A_2024_07_22_0010@{ i }
                            A_2024_07_21_0031@{ i }
                            (
                                A_2024_07_21_0033@{ i }
                                    ( A_2024_07_21_0033@{ i } ( A_2024_07_21_0053@{ i } A_2024_07_21_0032@{ i } y_前 ) )
                            )
                    )
                .
            }
            {
                refine
                    (
                        A_2024_07_22_0011@{ i }
                            A_2024_07_21_0031@{ i }
                            (
                                A_2024_07_21_0033@{ i }
                                    ( A_2024_07_21_0033@{ i } ( A_2024_07_21_0053@{ i } A_2024_07_21_0032@{ i } y_前 ) )
                            )
                            (
                                A_2024_07_21_0033@{ i }
                                    ( A_2024_07_21_0053@{ i } A_2024_07_21_0032@{ i } ( A_2024_07_21_0033@{ i } y_前 ) )
                            )
                            ( A_2024_07_21_0033@{ i } ( A_2024_07_21_0033@{ i } y_前 ) )
                            _
                            _
                    )
                .
                {
                    refine
                        (
                            let
                                b
                                    :
                                        A_2024_07_22_0009@{ i }
                                            A_2024_07_21_0031@{ i }
                                            ( A_2024_07_21_0053@{ i } A_2024_07_21_0032@{ i } y_前 )
                                            y_前
                                    := A_2024_07_28_0004@{ i } y_前
                            in
                                _
                        )
                    .
                    refine
                        (
                            A_2024_07_22_0013@{ i }
                                A_2024_07_21_0031@{ i }
                                A_2024_07_21_0031@{ i }
                                ( fun z : A_2024_07_21_0031@{ i } => A_2024_07_21_0033@{ i } ( A_2024_07_21_0033@{ i } z ) )
                                ( A_2024_07_21_0053@{ i } A_2024_07_21_0032@{ i } y_前 )
                                y_前
                                _
                        )
                    .
                    exact b .
                }
                {
                    exact
                        (
                            A_2024_07_22_0010@{ i }
                                A_2024_07_21_0031@{ i }
                                ( A_2024_07_21_0033@{ i } ( A_2024_07_21_0033@{ i } y_前 ) )
                        )
                    .
                }
            }
        }
    }
    {
        refine
            (
                match
                    y
                as
                    y_
                return
                    A_2024_07_22_0009@{ i }
                        A_2024_07_21_0031@{ i }
                        ( A_2024_07_21_0053@{ i } ( A_2024_07_21_0033@{ i } ( A_2024_07_21_0033@{ i } x_前 ) ) y_ )
                        ( A_2024_07_21_0033@{ i } ( A_2024_07_21_0053@{ i } ( A_2024_07_21_0033@{ i } x_前 ) y_ ) )
                with
                    A_2024_07_21_0032 => _
                    |
                    A_2024_07_21_0033 y_前 => _
                end
            )
        .
        {
            exact ( A_2024_07_22_0010@{ i } A_2024_07_21_0031@{ i } ( A_2024_07_21_0033@{ i } ( A_2024_07_21_0033@{ i } x_前 ) ) ) .
        }
        {
            refine
                (
                    A_2024_07_22_0011@{ i }
                        A_2024_07_21_0031@{ i }
                        (
                            A_2024_07_21_0053@{ i }
                                ( A_2024_07_21_0033@{ i } ( A_2024_07_21_0033@{ i } x_前 ) )
                                ( A_2024_07_21_0033@{ i } y_前 )
                        )
                        (
                            A_2024_07_21_0033@{ i }
                                ( A_2024_07_21_0053@{ i } ( A_2024_07_21_0033@{ i } x_前 ) ( A_2024_07_21_0033@{ i } y_前 ) )
                        )
                        (
                            A_2024_07_21_0033@{ i }
                                ( A_2024_07_21_0033@{ i } ( A_2024_07_21_0053@{ i } ( A_2024_07_21_0033@{ i } x_前 ) y_前 ) )
                        )
                        _
                        _
                )
            .
            {
                exact
                    (
                        A_2024_07_22_0010@{ i }
                            A_2024_07_21_0031@{ i }
                            (
                                A_2024_07_21_0033@{ i }
                                    ( A_2024_07_21_0033@{ i } ( A_2024_07_21_0053@{ i } ( A_2024_07_21_0033@{ i } x_前 ) y_前 ) )
                            )
                    )
                .
            }
            {
                refine
                    (
                        A_2024_07_22_0011@{ i }
                            A_2024_07_21_0031@{ i }
                            (
                                A_2024_07_21_0033@{ i }
                                    ( A_2024_07_21_0033@{ i } ( A_2024_07_21_0053@{ i } ( A_2024_07_21_0033@{ i } x_前 ) y_前 ) )
                            )
                            (
                                A_2024_07_21_0033@{ i }
                                    ( A_2024_07_21_0053@{ i } ( A_2024_07_21_0033@{ i } x_前 ) ( A_2024_07_21_0033@{ i } y_前 ) )
                            )
                            (
                                A_2024_07_21_0033@{ i }
                                    ( A_2024_07_21_0033@{ i } ( A_2024_07_21_0033@{ i } ( A_2024_07_21_0053@{ i } x_前 y_前 ) ) )
                            )
                            _
                            _
                    )
                .
                {
                    refine
                        (
                            let
                                b
                                    :
                                        A_2024_07_22_0009@{ i }
                                            A_2024_07_21_0031@{ i }
                                            ( A_2024_07_21_0053@{ i } ( A_2024_07_21_0033@{ i } x_前 ) y_前 )
                                            ( A_2024_07_21_0033@{ i } ( A_2024_07_21_0053@{ i } x_前 y_前 ) )
                                    := a x_前 y_前
                            in
                                _
                        )
                    .
                    refine
                        (
                            A_2024_07_22_0013@{ i }
                                A_2024_07_21_0031@{ i }
                                A_2024_07_21_0031@{ i }
                                ( fun z : A_2024_07_21_0031@{ i } => A_2024_07_21_0033@{ i } ( A_2024_07_21_0033@{ i } z ) )
                                ( A_2024_07_21_0053@{ i } ( A_2024_07_21_0033@{ i } x_前 ) y_前 )
                                ( A_2024_07_21_0033@{ i } ( A_2024_07_21_0053@{ i } x_前 y_前 ) )
                                _
                        )
                    .
                    exact b .
                }
                {
                    exact
                        (
                            A_2024_07_22_0010@{ i }
                                A_2024_07_21_0031@{ i }
                                (
                                    A_2024_07_21_0033@{ i }
                                        (
                                            A_2024_07_21_0033@{ i }
                                                (
                                                    A_2024_07_21_0033@{ i } ( A_2024_07_21_0053@{ i } x_前 y_前 )
                                                )
                                        )
                                )
                        )
                    .
                }
            }
        }
    }
Defined .

(** [x] と [y] の後者を足した数は [x] と [y] を足した数の後者に等しくなります。 *)

Definition A_2024_08_01_0000@{ i | } ( x : A_2024_07_21_0031@{ i } ) ( y : A_2024_07_21_0031@{ i } )
        :
            A_2024_07_22_0009@{ i }
                A_2024_07_21_0031@{ i }
                ( A_2024_07_21_0053@{ i } x ( A_2024_07_21_0033@{ i } y ) )
                ( A_2024_07_21_0033@{ i } ( A_2024_07_21_0053@{ i } x y ) )
.
Proof .
    refine
        (
            let
                fix a ( x : A_2024_07_21_0031@{ i } ) ( y : A_2024_07_21_0031@{ i } ) { struct y }
                    :
                        A_2024_07_22_0009@{ i }
                            A_2024_07_21_0031@{ i }
                            ( A_2024_07_21_0053@{ i } x ( A_2024_07_21_0033@{ i } y ) )
                            ( A_2024_07_21_0033@{ i } ( A_2024_07_21_0053@{ i } x y ) )
                    := _
            in
                a x y
        )
    .
    refine
        (
            match
                x
            as
                x_
            return
                A_2024_07_22_0009@{ i }
                    A_2024_07_21_0031@{ i }
                    ( A_2024_07_21_0053@{ i } x_ ( A_2024_07_21_0033@{ i } y ) )
                    ( A_2024_07_21_0033@{ i } ( A_2024_07_21_0053@{ i } x_ y ) )
            with
                A_2024_07_21_0032 => _
                |
                A_2024_07_21_0033 x_前 => _
            end
        )
    .
    {
        refine
            (
                match
                    y
                as
                    y_
                return
                    A_2024_07_22_0009@{ i }
                        A_2024_07_21_0031@{ i }
                        ( A_2024_07_21_0053@{ i } A_2024_07_21_0032@{ i } ( A_2024_07_21_0033@{ i } y_ ) )
                        ( A_2024_07_21_0033@{ i } ( A_2024_07_21_0053@{ i } A_2024_07_21_0032@{ i } y_ ) )
                with
                    A_2024_07_21_0032 => _
                    |
                    A_2024_07_21_0033 y_前 => _
                end
            )
        .
        {
            exact ( A_2024_07_22_0010@{ i } A_2024_07_21_0031@{ i } ( A_2024_07_21_0033@{ i } A_2024_07_21_0032@{ i } ) ) .
        }
        {
            exact ( A_2024_07_22_0010@{ i } A_2024_07_21_0031@{ i } ( A_2024_07_21_0033@{ i } ( A_2024_07_21_0033@{ i } y_前 ) ) ) .
        }
    }
    {
        refine
            (
                match
                    y
                as
                    y_
                return
                    A_2024_07_22_0009@{ i }
                        A_2024_07_21_0031@{ i }
                        ( A_2024_07_21_0053@{ i } ( A_2024_07_21_0033@{ i } x_前 ) ( A_2024_07_21_0033@{ i } y_ ) )
                        ( A_2024_07_21_0033@{ i } ( A_2024_07_21_0053@{ i } ( A_2024_07_21_0033@{ i } x_前 ) y_ ) )
                with
                    A_2024_07_21_0032 => _
                    |
                    A_2024_07_21_0033 y_前 => _
                end
            )
        .
        {
            refine
                (
                    A_2024_07_22_0011@{ i }
                        A_2024_07_21_0031@{ i }
                        (
                            A_2024_07_21_0053@{ i }
                                ( A_2024_07_21_0033@{ i } x_前 )
                                ( A_2024_07_21_0033@{ i } A_2024_07_21_0032@{ i } )
                        )
                        (
                            A_2024_07_21_0033@{ i }
                                ( A_2024_07_21_0053@{ i } ( A_2024_07_21_0033@{ i } x_前 ) A_2024_07_21_0032@{ i } )
                        )
                        (
                            A_2024_07_21_0033@{ i }
                                ( A_2024_07_21_0033@{ i } ( A_2024_07_21_0053@{ i } x_前 A_2024_07_21_0032@{ i } ) )
                        )
                        _
                        _
                )
            .
            {
                exact
                    (
                        A_2024_07_22_0010@{ i }
                            A_2024_07_21_0031@{ i }
                            (
                                A_2024_07_21_0033@{ i }
                                    ( A_2024_07_21_0033@{ i } ( A_2024_07_21_0053@{ i } x_前 A_2024_07_21_0032@{ i } ) )
                            )
                    )
                .
            }
            {
                refine
                    (
                        A_2024_07_22_0011@{ i }
                            A_2024_07_21_0031@{ i }
                            (
                                A_2024_07_21_0033@{ i }
                                    ( A_2024_07_21_0033@{ i } ( A_2024_07_21_0053@{ i } x_前 A_2024_07_21_0032@{ i } ) )
                            )
                            (
                                A_2024_07_21_0033@{ i }
                                    ( A_2024_07_21_0053@{ i } ( A_2024_07_21_0033@{ i } x_前 ) A_2024_07_21_0032@{ i } )
                            )
                            ( A_2024_07_21_0033@{ i } ( A_2024_07_21_0033@{ i } x_前 ) )
                            _
                            _
                    )
                .
                {
                    refine
                        (
                            let
                                b
                                    :
                                        A_2024_07_22_0009@{ i }
                                            A_2024_07_21_0031@{ i }
                                            ( A_2024_07_21_0053@{ i } x_前 A_2024_07_21_0032@{ i } )
                                            x_前
                                    :=  A_2024_07_28_0005@{ i } x_前
                            in
                                _
                        )
                    .
                    refine
                        (
                            A_2024_07_22_0013@{ i }
                                A_2024_07_21_0031@{ i }
                                A_2024_07_21_0031@{ i }
                                ( fun z : A_2024_07_21_0031@{ i } => A_2024_07_21_0033@{ i } ( A_2024_07_21_0033@{ i } z ) )
                                ( A_2024_07_21_0053@{ i } x_前 A_2024_07_21_0032@{ i } )
                                x_前
                                _
                        )
                    .
                    exact b .
                }
                {
                    exact
                        (
                            A_2024_07_22_0010@{ i }
                                A_2024_07_21_0031@{ i }
                                ( A_2024_07_21_0033@{ i } ( A_2024_07_21_0033@{ i } x_前 ) )
                        )
                    .
                }
            }
        }
        {
            refine
                (
                    A_2024_07_22_0011@{ i }
                        A_2024_07_21_0031@{ i }
                        (
                            A_2024_07_21_0053@{ i }
                                ( A_2024_07_21_0033@{ i } x_前 )
                                ( A_2024_07_21_0033@{ i } ( A_2024_07_21_0033@{ i } y_前 ) )
                        )
                        (
                            A_2024_07_21_0033@{ i }
                                ( A_2024_07_21_0053@{ i } ( A_2024_07_21_0033@{ i } x_前 ) ( A_2024_07_21_0033@{ i } y_前 ) )
                        )
                        (
                            A_2024_07_21_0033@{ i }
                                ( A_2024_07_21_0033@{ i } ( A_2024_07_21_0053@{ i } x_前 ( A_2024_07_21_0033@{ i } y_前 ) ) )
                        )
                        _
                        _
                )
            .
            {
                exact
                    (
                        A_2024_07_22_0010@{ i }
                            A_2024_07_21_0031@{ i }
                            (
                                A_2024_07_21_0033@{ i }
                                    ( A_2024_07_21_0033@{ i } ( A_2024_07_21_0053@{ i } x_前 ( A_2024_07_21_0033@{ i } y_前 ) ) )
                            )
                    )
                .
            }
            {
                refine
                    (
                        A_2024_07_22_0011@{ i }
                            A_2024_07_21_0031@{ i }
                            (
                                A_2024_07_21_0033@{ i }
                                    ( A_2024_07_21_0033@{ i } ( A_2024_07_21_0053@{ i } x_前 ( A_2024_07_21_0033@{ i } y_前 ) ) )
                            )
                            (
                                A_2024_07_21_0033@{ i }
                                    ( A_2024_07_21_0053@{ i } ( A_2024_07_21_0033@{ i } x_前 ) ( A_2024_07_21_0033@{ i } y_前 ) )
                            )
                            (
                                A_2024_07_21_0033@{ i }
                                    ( A_2024_07_21_0033@{ i } ( A_2024_07_21_0033@{ i } ( A_2024_07_21_0053@{ i } x_前 y_前 ) ) )
                            )
                            _
                            _
                    )
                .
                {
                    refine
                        (
                            let
                                b
                                    :
                                        A_2024_07_22_0009@{ i }
                                            A_2024_07_21_0031@{ i }
                                            ( A_2024_07_21_0053@{ i } x_前 ( A_2024_07_21_0033@{ i } y_前 ) )
                                            ( A_2024_07_21_0033@{ i } ( A_2024_07_21_0053@{ i } x_前 y_前 ) )
                                    := a x_前 y_前
                            in
                                _
                        )
                    .
                    refine
                        (
                            A_2024_07_22_0013@{ i }
                                A_2024_07_21_0031@{ i }
                                A_2024_07_21_0031@{ i }
                                ( fun z : A_2024_07_21_0031@{ i } => A_2024_07_21_0033@{ i } ( A_2024_07_21_0033@{ i } z ) )
                                ( A_2024_07_21_0053@{ i } x_前 ( A_2024_07_21_0033@{ i } y_前 ) )
                                ( A_2024_07_21_0033@{ i } ( A_2024_07_21_0053@{ i } x_前 y_前 ) )
                                _
                        )
                    .
                    exact b .
                }
                {
                    exact
                        (
                            A_2024_07_22_0010@{ i }
                                A_2024_07_21_0031@{ i }
                                (
                                    A_2024_07_21_0033@{ i }
                                        (
                                            A_2024_07_21_0033@{ i }
                                                (
                                                    A_2024_07_21_0033@{ i } ( A_2024_07_21_0053@{ i } x_前 y_前 )
                                                )
                                        )
                                )
                        )
                    .
                }
            }
        }
    }
Defined .

(** [m] と [n] を足した数と [o] を足した数は [m] と [n] と [o] を足した数を足した数に等しくなります。 *)

Definition A_2024_08_26_0000@{ i | } ( m : A_2024_07_21_0031@{ i } ) ( n : A_2024_07_21_0031@{ i } ) ( o : A_2024_07_21_0031@{ i } )
    :
        A_2024_07_22_0009@{ i }
            A_2024_07_21_0031@{ i }
            ( A_2024_07_21_0053@{ i } ( A_2024_07_21_0053@{ i } m n ) o )
            ( A_2024_07_21_0053@{ i } m ( A_2024_07_21_0053@{ i } n o ) )
.
Proof .
    refine
        (
            let
                fix a ( m_ : A_2024_07_21_0031@{ i } ) ( n_ : A_2024_07_21_0031@{ i } ) ( o_ : A_2024_07_21_0031@{ i } ) { struct m_ }
                    :
                        A_2024_07_22_0009@{ i }
                            A_2024_07_21_0031@{ i }
                            ( A_2024_07_21_0053@{ i } ( A_2024_07_21_0053@{ i } m_ n_ ) o_ )
                            ( A_2024_07_21_0053@{ i } m_ ( A_2024_07_21_0053@{ i } n_ o_ ) )
                    := _
            in
                a m n o
        )
    .
    refine
        (
            match
                m_
            as
                m__
            return
                A_2024_07_22_0009@{ i }
                    A_2024_07_21_0031@{ i }
                    ( A_2024_07_21_0053@{ i } ( A_2024_07_21_0053@{ i } m__ n_ ) o_ )
                    ( A_2024_07_21_0053@{ i } m__ ( A_2024_07_21_0053@{ i } n_ o_ ) )
            with
                A_2024_07_21_0032 => _
                |
                A_2024_07_21_0033 m_前 => _
            end
        )
    .
    {
        refine
            (
                match
                    n_
                as
                    n__
                return
                    A_2024_07_22_0009@{ i }
                        A_2024_07_21_0031@{ i }
                        ( A_2024_07_21_0053@{ i } ( A_2024_07_21_0053@{ i } A_2024_07_21_0032@{ i } n__ ) o_ )
                        ( A_2024_07_21_0053@{ i } A_2024_07_21_0032@{ i } ( A_2024_07_21_0053@{ i } n__ o_ ) )
                with
                    A_2024_07_21_0032 => _
                    |
                    A_2024_07_21_0033 n_前 => _
                end
            )
        .
        {
            refine
                (
                    match
                        o_
                    as
                        o__
                    return
                        A_2024_07_22_0009@{ i }
                            A_2024_07_21_0031@{ i }
                            ( A_2024_07_21_0053@{ i } ( A_2024_07_21_0053@{ i } A_2024_07_21_0032@{ i } A_2024_07_21_0032@{ i } ) o__ )
                            ( A_2024_07_21_0053@{ i } A_2024_07_21_0032@{ i } ( A_2024_07_21_0053@{ i } A_2024_07_21_0032@{ i } o__ ) )
                    with
                        A_2024_07_21_0032 => _
                        |
                        A_2024_07_21_0033 o_前 => _
                    end
                )
            .
            {
                exact ( A_2024_07_22_0010@{ i } A_2024_07_21_0031@{ i } A_2024_07_21_0032@{ i } ) .
            }
            {
                exact ( A_2024_07_22_0010@{ i } A_2024_07_21_0031@{ i } ( A_2024_07_21_0033@{ i } o_前 ) ) .
            }
        }
        {
            refine
                (
                    match
                        o_
                    as
                        o__
                    return
                        A_2024_07_22_0009@{ i }
                            A_2024_07_21_0031@{ i }
                            (
                                A_2024_07_21_0053@{ i }
                                    ( A_2024_07_21_0053@{ i } A_2024_07_21_0032@{ i } ( A_2024_07_21_0033@{ i } n_前 ) )
                                    o__
                            )
                            (
                                A_2024_07_21_0053@{ i }
                                    A_2024_07_21_0032@{ i }
                                    ( A_2024_07_21_0053@{ i } ( A_2024_07_21_0033@{ i } n_前 ) o__ )
                            )
                    with
                        A_2024_07_21_0032 => _
                        |
                        A_2024_07_21_0033 o_前 => _
                    end
                )
            .
            {
                exact ( A_2024_07_22_0010@{ i } A_2024_07_21_0031@{ i } ( A_2024_07_21_0033@{ i } n_前 ) ) .
            }
            {
                exact
                    (
                        A_2024_07_22_0010@{ i }
                            A_2024_07_21_0031@{ i }
                            ( A_2024_07_21_0033@{ i } ( A_2024_07_21_0033@{ i } ( A_2024_07_21_0053@{ i } n_前 o_前 ) ) )
                    )
                .
            }
        }
    }
    {
        refine
            (
                match
                    n_
                as
                    n__
                return
                    A_2024_07_22_0009@{ i }
                        A_2024_07_21_0031@{ i }
                        ( A_2024_07_21_0053@{ i } ( A_2024_07_21_0053@{ i } ( A_2024_07_21_0033@{ i } m_前 ) n__ ) o_ )
                        ( A_2024_07_21_0053@{ i } ( A_2024_07_21_0033@{ i } m_前 ) ( A_2024_07_21_0053@{ i } n__ o_ ) )
                with
                    A_2024_07_21_0032 => _
                    |
                    A_2024_07_21_0033 n_前 => _
                end
            )
        .
        {
            refine
                (
                    match
                        o_
                    as
                        o__
                    return
                        A_2024_07_22_0009@{ i }
                            A_2024_07_21_0031@{ i }
                            (
                                A_2024_07_21_0053@{ i }
                                    ( A_2024_07_21_0053@{ i } ( A_2024_07_21_0033@{ i } m_前 ) A_2024_07_21_0032@{ i } )
                                    o__
                            )
                            (
                                A_2024_07_21_0053@{ i }
                                    ( A_2024_07_21_0033@{ i } m_前 )
                                    ( A_2024_07_21_0053@{ i } A_2024_07_21_0032@{ i } o__ )
                            )
                    with
                        A_2024_07_21_0032 => _
                        |
                        A_2024_07_21_0033 o_前 => _
                    end
                )
            .
            {
                exact ( A_2024_07_22_0010@{ i } A_2024_07_21_0031@{ i } ( A_2024_07_21_0033@{ i } m_前 ) ) .
            }
            {
                exact
                    (
                        A_2024_07_22_0010@{ i }
                            A_2024_07_21_0031@{ i }
                            ( A_2024_07_21_0033@{ i } ( A_2024_07_21_0033@{ i } ( A_2024_07_21_0053@{ i } m_前 o_前 ) ) )
                    )
                .
            }
        }
        {
            refine
                (
                    match
                        o_
                    as
                        o__
                    return
                        A_2024_07_22_0009@{ i }
                            A_2024_07_21_0031@{ i }
                            (
                                A_2024_07_21_0053@{ i }
                                    ( A_2024_07_21_0053@{ i } ( A_2024_07_21_0033@{ i } m_前 ) ( A_2024_07_21_0033@{ i } n_前 ) )
                                    o__
                            )
                            (
                                A_2024_07_21_0053@{ i }
                                    ( A_2024_07_21_0033@{ i } m_前 )
                                    ( A_2024_07_21_0053@{ i } ( A_2024_07_21_0033@{ i } n_前 ) o__ )
                            )
                    with
                        A_2024_07_21_0032 => _
                        |
                        A_2024_07_21_0033 o_前 => _
                    end
                )
            .
            {
                exact
                    (
                        A_2024_07_22_0010@{ i }
                            A_2024_07_21_0031@{ i }
                            ( A_2024_07_21_0033@{ i } ( A_2024_07_21_0033@{ i } ( A_2024_07_21_0053@{ i } m_前 n_前 ) ) )
                    )
                .
            }
            {
                refine
                    (
                        A_2024_07_22_0011@{ i }
                            A_2024_07_21_0031@{ i }
                                (
                                    A_2024_07_21_0033@{ i }
                                        (
                                            A_2024_07_21_0033@{ i }
                                                (
                                                    A_2024_07_21_0053@{ i }
                                                        ( A_2024_07_21_0033@{ i } ( A_2024_07_21_0053@{ i } m_前 n_前 ) )
                                                        o_前
                                                )
                                        )
                                )
                                (
                                    A_2024_07_21_0033@{ i }
                                        (
                                            A_2024_07_21_0033@{ i }
                                                (
                                                    A_2024_07_21_0053@{ i }
                                                        m_前
                                                        ( A_2024_07_21_0033@{ i } ( A_2024_07_21_0053@{ i } n_前 o_前 ) )
                                                )
                                        )
                                )
                                (
                                    A_2024_07_21_0033@{ i }
                                        (
                                            A_2024_07_21_0033@{ i }
                                                (
                                                    A_2024_07_21_0033@{ i }
                                                        ( A_2024_07_21_0053@{ i } ( A_2024_07_21_0053@{ i } m_前 n_前 ) o_前 )
                                                )
                                        )
                                )
                                _
                                _
                    )
                .
                {
                    refine
                        (
                            let
                                b
                                    :
                                        A_2024_07_22_0009@{ i }
                                            A_2024_07_21_0031@{ i }
                                            (
                                                A_2024_07_21_0053@{ i }
                                                    ( A_2024_07_21_0033@{ i } ( A_2024_07_21_0053@{ i } m_前 n_前 ) )
                                                    o_前
                                            )
                                            (
                                                A_2024_07_21_0033@{ i }
                                                    ( A_2024_07_21_0053@{ i } ( A_2024_07_21_0053@{ i } m_前 n_前 ) o_前 )
                                            )
                                    := A_2024_07_28_0006@{ i } ( A_2024_07_21_0053@{ i } m_前 n_前 ) o_前
                            in
                                _
                        )
                    .
                    refine
                        (
                            A_2024_07_22_0013@{ i }
                                A_2024_07_21_0031@{ i }
                                A_2024_07_21_0031@{ i }
                                (
                                    fun w : A_2024_07_21_0031@{ i } =>
                                    A_2024_07_21_0033@{ i } ( A_2024_07_21_0033@{ i } w )
                                )
                                (
                                    A_2024_07_21_0053@{ i }
                                        ( A_2024_07_21_0033@{ i } ( A_2024_07_21_0053@{ i } m_前 n_前 ) )
                                        o_前
                                )
                                (
                                    A_2024_07_21_0033@{ i }
                                        ( A_2024_07_21_0053@{ i } ( A_2024_07_21_0053@{ i } m_前 n_前 ) o_前 )
                                )
                                _
                        )
                    .
                    exact b .
                }
                {
                    refine
                        (
                            A_2024_07_22_0011@{ i }
                                A_2024_07_21_0031@{ i }
                                (
                                    A_2024_07_21_0033@{ i }
                                        (
                                            A_2024_07_21_0033@{ i }
                                                (
                                                    A_2024_07_21_0033@{ i }
                                                        ( A_2024_07_21_0053@{ i } ( A_2024_07_21_0053@{ i } m_前 n_前 ) o_前 )
                                                )
                                        )
                                )
                                (
                                    A_2024_07_21_0033@{ i }
                                        (
                                            A_2024_07_21_0033@{ i }
                                                (
                                                    A_2024_07_21_0053@{ i }
                                                        m_前
                                                        ( A_2024_07_21_0033@{ i } ( A_2024_07_21_0053@{ i } n_前 o_前 ) )
                                                )
                                        )
                                )
                                (
                                    A_2024_07_21_0033@{ i }
                                        (
                                            A_2024_07_21_0033@{ i }
                                                (
                                                    A_2024_07_21_0033@{ i }
                                                        ( A_2024_07_21_0053@{ i } m_前 ( A_2024_07_21_0053@{ i } n_前 o_前 ) )
                                                )
                                        )
                                )
                                _
                                _
                        )
                    .
                    {
                        refine
                            (
                                let
                                    b
                                        :
                                            A_2024_07_22_0009@{ i }
                                                A_2024_07_21_0031@{ i }
                                                ( A_2024_07_21_0053@{ i } ( A_2024_07_21_0053@{ i } m_前 n_前 ) o_前 )
                                                ( A_2024_07_21_0053@{ i } m_前 ( A_2024_07_21_0053@{ i } n_前 o_前 ) )
                                        := a m_前 n_前 o_前
                                in
                                    _
                            )
                        .
                        refine
                            (
                                A_2024_07_22_0013@{ i }
                                    A_2024_07_21_0031@{ i }
                                    A_2024_07_21_0031@{ i }
                                    (
                                        fun w : A_2024_07_21_0031@{ i } =>
                                        A_2024_07_21_0033@{ i } ( A_2024_07_21_0033@{ i } ( A_2024_07_21_0033@{ i } w ) )
                                    )
                                    ( A_2024_07_21_0053@{ i } ( A_2024_07_21_0053@{ i } m_前 n_前 ) o_前 )
                                    ( A_2024_07_21_0053@{ i } m_前 ( A_2024_07_21_0053@{ i } n_前 o_前 ) )
                                    _
                            )
                        .
                        exact b .
                    }
                    {
                        refine
                            (
                                let
                                    b
                                        :
                                            A_2024_07_22_0009@{ i }
                                                A_2024_07_21_0031@{ i }
                                                (
                                                    A_2024_07_21_0053@{ i }
                                                        m_前
                                                        ( A_2024_07_21_0033@{ i } ( A_2024_07_21_0053@{ i } n_前 o_前 ) )
                                                )
                                                (
                                                    A_2024_07_21_0033@{ i }
                                                        ( A_2024_07_21_0053@{ i } m_前 ( A_2024_07_21_0053@{ i } n_前 o_前 ) )
                                                )
                                        := A_2024_08_01_0000@{ i } m_前 ( A_2024_07_21_0053@{ i } n_前 o_前 ) 
                                in
                                    _
                            )
                        .
                        refine
                            (
                                A_2024_07_22_0013@{ i }
                                    A_2024_07_21_0031@{ i }
                                    A_2024_07_21_0031@{ i }
                                    (
                                        fun w : A_2024_07_21_0031@{ i } =>
                                        A_2024_07_21_0033@{ i } ( A_2024_07_21_0033@{ i } w )
                                    )
                                    (
                                        A_2024_07_21_0033@{ i }
                                            ( A_2024_07_21_0053@{ i } m_前 ( A_2024_07_21_0053@{ i } n_前 o_前 ) )
                                    )
                                    (
                                        A_2024_07_21_0053@{ i }
                                            m_前
                                            ( A_2024_07_21_0033@{ i } ( A_2024_07_21_0053@{ i } n_前 o_前 ) )
                                    )
                                    _
                            )
                        .
                        refine
                            (
                                A_2024_07_22_0012@{ i }
                                    A_2024_07_21_0031@{ i }
                                    (
                                        A_2024_07_21_0033@{ i }
                                            ( A_2024_07_21_0053@{ i } m_前 ( A_2024_07_21_0053@{ i } n_前 o_前 ) )
                                    )
                                    (
                                        A_2024_07_21_0053@{ i }
                                            m_前
                                            ( A_2024_07_21_0033@{ i } ( A_2024_07_21_0053@{ i } n_前 o_前 ) )
                                    )
                                    _
                            )
                        .
                        exact b .
                    }
                }
            }
        }
    }
Defined .

(** [m] と [n] を足した数は [n] と [m] を足した数に等しくなります。 *)

Definition A_2024_08_26_0001@{ i | } ( m : A_2024_07_21_0031@{ i } ) ( n : A_2024_07_21_0031@{ i } )
    :
        A_2024_07_22_0009@{ i } A_2024_07_21_0031@{ i } ( A_2024_07_21_0053@{ i } n m ) ( A_2024_07_21_0053@{ i } m n )
.
Proof .
    refine
        (
            let
                fix a ( m_ : A_2024_07_21_0031@{ i } ) ( n_ : A_2024_07_21_0031@{ i } ) { struct m_ }
                    :
                        A_2024_07_22_0009@{ i }
                            A_2024_07_21_0031@{ i }
                            ( A_2024_07_21_0053@{ i } n_ m_ )
                            ( A_2024_07_21_0053@{ i } m_ n_ )
                    := _
            in
                a m n
        )
    .
    refine
        (
            match
                m_
            as
                m__
            return
                A_2024_07_22_0009@{ i }
                    A_2024_07_21_0031@{ i }
                    ( A_2024_07_21_0053@{ i } n_ m__ )
                    ( A_2024_07_21_0053@{ i } m__ n_ )
            with
                A_2024_07_21_0032 => _
                |
                A_2024_07_21_0033 m_前 => _
            end
        )
    .
    {
        refine
            (
                match
                    n_
                as
                    n__
                return
                    A_2024_07_22_0009@{ i }
                        A_2024_07_21_0031@{ i }
                        ( A_2024_07_21_0053@{ i } n__ A_2024_07_21_0032@{ i } )
                        ( A_2024_07_21_0053@{ i } A_2024_07_21_0032@{ i } n__ )
                with
                    A_2024_07_21_0032 => _
                    |
                    A_2024_07_21_0033 n_前 => _
                end
            )
        .
        {
            exact ( A_2024_07_22_0010@{ i } A_2024_07_21_0031@{ i } A_2024_07_21_0032@{ i } ) .
        }
        {
            exact ( A_2024_07_22_0010@{ i } A_2024_07_21_0031@{ i } ( A_2024_07_21_0033@{ i } n_前 ) ) .
        }
    }
    {
        refine
            (
                match
                    n_
                as
                    n__
                return
                    A_2024_07_22_0009@{ i }
                        A_2024_07_21_0031@{ i }
                        ( A_2024_07_21_0053@{ i } n__ ( A_2024_07_21_0033@{ i } m_前 ) )
                        ( A_2024_07_21_0053@{ i } ( A_2024_07_21_0033@{ i } m_前 ) n__ )
                with
                    A_2024_07_21_0032 => _
                    |
                    A_2024_07_21_0033 n_前 => _
                end
            )
        .
        {
            exact ( A_2024_07_22_0010@{ i } A_2024_07_21_0031@{ i } ( A_2024_07_21_0033@{ i } m_前 ) ) .
        }
        {
            refine
                (
                    let
                        b
                            :
                                A_2024_07_22_0009@{ i }
                                    A_2024_07_21_0031@{ i }
                                    ( A_2024_07_21_0053@{ i } n_前 m_前 )
                                    ( A_2024_07_21_0053@{ i } m_前 n_前 )
                            := a m_前 n_前
                    in
                        _
                )
            .
            refine
                (
                    A_2024_07_22_0013@{ i }
                        A_2024_07_21_0031@{ i }
                        A_2024_07_21_0031@{ i }
                        ( fun x : A_2024_07_21_0031@{ i } => A_2024_07_21_0033@{ i } ( A_2024_07_21_0033@{ i } x ) )
                        ( A_2024_07_21_0053@{ i } n_前 m_前 )
                        ( A_2024_07_21_0053@{ i } m_前 n_前 )
                        _
                )
            .
            exact b .
        }
    }
Defined .
